{"version":3,"file":"epsplanet.js","sources":["../../../projects/epsplanet/models/layer.ts","../../../projects/epsplanet/models/layer-xbsj-func.ts","../../../projects/epsplanet/utils/sceneTree-utils.ts","../../../projects/epsplanet/components/earth/earth.component.ts","../../../projects/epsplanet/components/earth/earth.component.html","../../../projects/epsplanet/components/base-widget/base-widget.component.ts","../../../projects/epsplanet/components/home/home.component.ts","../../../projects/epsplanet/components/layer-manager/layer-manager.component.html","../../../projects/epsplanet/components/layer-manager/layer-manager.component.ts","../../../projects/epsplanet/components/layer-list/layer-list.component.html","../../../projects/epsplanet/components/layer-list/layer-list.component.ts","../../../projects/epsplanet/components/location/location.component.html","../../../projects/epsplanet/components/location/location.component.ts","../../../projects/epsplanet/components/mode-switch/mode-switch.component.html","../../../projects/epsplanet/components/mode-switch/mode-switch.component.ts","../../../projects/epsplanet/components/status-bar/status-bar.component.ts","../../../projects/epsplanet/components/zoom/zoom.component.ts","../../../projects/epsplanet/components/zoom/zoom.component.html","../../../projects/epsplanet/components/basemap-gallery/basemap-gallery.component.html","../../../projects/epsplanet/components/basemap-gallery/basemap-gallery.component.ts","../../../projects/epsplanet/utils/identify.ts","../../../projects/epsplanet/components/identify/identify.component.html","../../../projects/epsplanet/components/identify/identify.component.ts","../../../projects/epsplanet/epsplanet.module.ts","../../../projects/epsplanet/utils/getHeight.ts"],"sourcesContent":["/**\n * 图层类型\n */\nexport enum LayerType {\n    Imagery = \"Imagery\",\n    Tileset = \"Tileset\",\n    Terrain = \"Terrain\"\n}\n/**\n * 图层服务来源\n */\nexport enum LayerServiceSource {\n    ArcGis,\n    SuperMap,\n    TianDiTu,\n    BaiDu,\n    GaoDe,\n    EpsPlanet\n}","\n//////////////////////////////////////////////////////////////////////////////////\n//初始化一个空的对象\n//////////////////////////////////////////////////////////////////////////////////\n\nimport { IXbsjCzmObject, IXbsjImageryLayerNode, IXbsjTilesetLayerNode, IXbsjTerrainLayerNode } from './layer-xbsj';\nimport { ILayerFolder } from './layer-config';\nimport { LayerType } from './layer';\n\nexport function newXbsjFolderNode(title: string): ILayerFolder {\n    return {\n        title: title,\n        children: []\n    };\n}\n\nexport function newXbsjLayerNode(type: string, title: string, url: string): IXbsjCzmObject {\n    const _type = type.toLocaleLowerCase();\n    let result: IXbsjCzmObject = { czmObject: null };\n    switch (_type) {\n        case LayerType.Imagery.toLocaleLowerCase():\n            result.czmObject = newXbsjImageryLayerNode(title, url);\n            break;\n        case LayerType.Tileset.toLocaleLowerCase():\n            result.czmObject = newXbsjTilesetLayerNode(title, url);\n            break;\n        case LayerType.Terrain.toLocaleLowerCase():\n            result.czmObject = newXbsjTerrainLayerNode(title, url);\n            break;\n        default:\n            break;\n    }\n    return result;\n}\nfunction newXbsjImageryLayerNode(title: string, url: string): IXbsjImageryLayerNode {\n    let node: IXbsjImageryLayerNode = {\n        xbsjType: LayerType.Imagery,\n        name: title,\n        enable: true,\n        show: true,\n        xbsjImageryProvider: {\n            XbsjImageryProvider: {\n                url: url\n            }\n        }\n\n    };\n    return node;\n}\n\nfunction newXbsjTilesetLayerNode(title: string, url: string): IXbsjTilesetLayerNode {\n    let node: IXbsjTilesetLayerNode = {\n        xbsjType: LayerType.Tileset,\n        name: title,\n        url: url,\n        enable: true,\n        show: true,\n    };\n    return node;\n}\n\nfunction newXbsjTerrainLayerNode(title: string, url: string): IXbsjTerrainLayerNode {\n    return {\n        xbsjType: LayerType.Terrain,\n        name: title,\n        enable: true,\n        show: true,\n        xbsjTerrainProvider: {\n            type: \"XbsjCesiumTerrainProvider\",\n            XbsjEllipsoidTerrainProvider: {},\n            XbsjCesiumTerrainProvider: {\n                url: url,\n                requestVertexNormals: true,\n                requestWaterMask: true\n            }\n        }\n    }\n}","import { NzTreeNode } from 'ng-zorro-antd/tree';\nimport { IdGenerater } from 'epsgis';\nimport { isArray } from 'lodash';\nimport { ILayerNode, ILayerFolder } from '../models/layer-config';\nimport { newXbsjFolderNode, newXbsjLayerNode } from '../models/layer-xbsj-func';\nimport { IXbsjCzmObject } from '../models/layer-xbsj';\n\n/**\n *  场景树帮助类 create by ruir\n */\nexport class SceneTreeUtils {\n    /**\n     * 将场景树数据转为ngZorro结构的树数据\n     * @param root this.view.sceneTree.root\n     */\n    static SceneTree2NgZorroTree(root: any): Array<NzTreeNode> {\n        if (!root || !root.children || root.children.length <= 0) {\n            return root;\n        }\n        let rootNode: NzTreeNode = null;\n        if (root.title && root.title !== \"未命名\") {\n            rootNode = new NzTreeNode({\n                title: root.title,\n                expanded: root.expand === true,\n                key: root.guid || root.xbsjGuid || IdGenerater.newGuid(),\n                origin: root,\n                isLeaf: false,\n                parentNode: null\n            });\n            rootNode.level = -1\n            // console.log(\"root\",root,rootNode)\n            // rootNode.isExpanded = root.expand === true;\n        }\n        const _layerNodes: Array<NzTreeNode> = [];\n        if (rootNode) {\n            rootNode.children.push(...SceneTreeUtils.convertChildren(root.children, rootNode));\n            _layerNodes.push(rootNode);\n        } else {\n            _layerNodes.push(...SceneTreeUtils.convertChildren(root.children, rootNode));\n        }\n\n        return _layerNodes;\n    }\n    /**\n     * \n     * @param children \n     * @param parentNode \n     */\n    private static convertChildren(children: Array<any>, parentNode: any): Array<NzTreeNode> {\n        if (!children || children.length <= 0) {\n            return [];\n        }\n        const _layerNodes: Array<NzTreeNode> = [];\n        children.forEach(item => {\n\n            let node: NzTreeNode = null;\n            if (item.children) { // item.title\n                node = new NzTreeNode({\n                    level: parentNode.level + 1,\n                    title: item.title,\n                    isExpanded: item.expand === true,\n                    // isChecked: true,\n                    // checked:item.isSelected,\n                    key: item.guid || item.xbsjGuid || IdGenerater.newGuid(),\n                    origin: item,\n                    isLeaf: false,\n                    parentNode: parentNode\n                });\n                node.parentNode = parentNode;\n                node.level = parentNode.level + 1;\n\n                node.isExpanded = item.expand ? true : false;\n                if (item.children.length >= 1) {\n                    node.children.push(...SceneTreeUtils.convertChildren(item.children, node));\n                }\n                // node.isExpanded = item.expand === true;\n                let checkList = []\n                node.children.forEach((child: any) => {\n                    if (child.children && child.children.length > 0) {\n                        checkList.push(child.isChecked)\n                    } else {\n                        if (child.origin.origin.show) {\n                            checkList.push(true)\n                        } else {\n                            checkList.push(false)\n                        }\n                    }\n                })\n                if (SceneTreeUtils.isAllEqual(checkList) && checkList[0] == true) {\n                    node.isChecked = true\n                } else if (SceneTreeUtils.isAllEqual(checkList) && checkList[0] == false) {\n                    node.isChecked = false\n                } else if (!SceneTreeUtils.isAllEqual(checkList)) {\n                    node.isHalfChecked = true\n                }\n                // node.isChecked = true;//初始默认勾选父节点\n                // console.log(item.title,item)\n                _layerNodes.push(node);\n            } else {\n                //之前叶节点拿不到parentNode,强行从它的origin中取到parentNode,用于实现节点的单选\n                let childNode = SceneTreeUtils.convertCzmObject(item.czmObject, parentNode)\n                childNode.parentNode = childNode.origin.parentNode;\n                childNode.level = childNode.parentNode.level + 1\n                _layerNodes.push(childNode);\n                // _layerNodes.push(SceneTreeUtils.convertCzmObject(item.czmObject, parentNode));\n            }\n        });\n        return _layerNodes;\n    }\n\n    static isAllEqual(array) {\n        if (array.length > 0) {\n            return !array.some(function (value, index) {\n                return value !== array[0];\n            });\n        } else {\n            return true;\n        }\n    }\n    /**\n     * \n     * @param czmObject \n     */\n    private static convertCzmObject(czmObject: any, parentNode: NzTreeNode): NzTreeNode {\n        if (!czmObject) {\n            return null;\n        }\n        return new NzTreeNode({\n            title: czmObject.name,\n            key: czmObject.guid || czmObject.xbsjGuid || IdGenerater.newGuid(),\n            origin: czmObject,\n            isLeaf: true,\n            // checked: czmObject.isSelected,\n            checked: czmObject.show,\n            parentNode: parentNode\n        });\n    }\n    /**\n     * \n     */\n    static GetXbsjCzmObject(node: NzTreeNode) {\n        // return node?.origin?.origin;\n        return node && node.origin && node.origin.origin;\n    }\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    /**\n     * 图层加载\n     * @param layerConfig \n     */\n    static loadLayers(layerConfig: any) {\n        if (!layerConfig) {\n            return null;\n        }\n        if (!layerConfig.basemaps && !layerConfig.layers) {\n            return null;\n        }\n        const _layerNodes: Array<any> = [];\n        //固定底图和其他图层分组\n        const _layerlist = [\n            {\n                \"title\": \"basemap\",\n                \"ref\": \"basemap\",\n                \"children\": [],\n            },\n            {\n                \"title\": \"layerlist\",\n                \"ref\": \"layerlist\",\n                \"children\": [],\n            },\n            {\n                \"tilte\": \"pin\",\n                \"ref\": \"pin\",\n                \"children\": []\n            }\n        ]\n\n        //底图\n        if (typeof layerConfig.basemaps === \"object\" && isArray(layerConfig.basemaps)) {\n            layerConfig.basemaps.forEach((item: ILayerNode | ILayerFolder) => {\n                _layerlist[0].children.push(SceneTreeUtils.loadLayerNode(item));\n            });\n        }\n        //图层\n        if (typeof layerConfig.layers === \"object\" && isArray(layerConfig.layers)) {\n            layerConfig.layers.forEach((item: ILayerNode | ILayerFolder) => {\n                _layerlist[1].children.push(SceneTreeUtils.loadLayerNode(item));\n            });\n        }\n        return { children: _layerlist };\n    }\n    /**\n     * \n     */\n    static loadLayerNode(item: ILayerNode | ILayerFolder) {\n        if (isArray(item.children)) {\n            //目录\n            const node: ILayerFolder = newXbsjFolderNode(item.title);\n            if (item.children && item.children.length >= 1) {\n                item.children.forEach((child: ILayerNode | ILayerFolder) => {\n                    node.children.push(SceneTreeUtils.loadLayerNode(child))\n                })\n            }\n            node.expand = item.expand;\n            return node;\n        } else if (item.url || item.layer) {\n            //图层\n            // tianditu 需要将layer转换为url\n\n            const node: IXbsjCzmObject = newXbsjLayerNode(item.type, item.title, item.url);\n            node.czmObject.xbsjGuid = item.guid;\n            node.czmObject.show = item.show ? true : false;\n            node.ref = item.ref;\n            if (node.czmObject.hasOwnProperty(\"xbsjImageryProvider\")) {\n                //影像图层处理\n                if (item.srcCoordType) {\n                    //原坐标系\n                    node.czmObject.xbsjImageryProvider.XbsjImageryProvider.srcCoordType = item.srcCoordType;\n                }\n                if (item.dstCoordType) {\n                    //转换目标坐标系\n                    node.czmObject.xbsjImageryProvider.XbsjImageryProvider.dstCoordType = item.dstCoordType;\n                }\n            } else if (node.czmObject.hasOwnProperty(\"xbsjTerrainProvider\")) {\n                //地形图层处理\n            }\n            else if (node.hasOwnProperty(\"url\")) {\n                //瓦片图层处理\n\n            }\n            if (item.extendOptions) {\n\n                node.czmObject = Object.assign(node.czmObject, item.extendOptions);\n                if (item.extendOptions.rectangle) {\n                    // console.log(node.czmObject.rectangle)\n                    let rect = []\n                    node.czmObject.rectangle.forEach(item => {\n                        rect.push(item / 180 * Math.PI)\n                    })\n                    node.czmObject.rectangle = rect\n                }\n            }\n            return node;\n        }\n        return null;\n    }\n}","import { Component, ElementRef, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { BaseMapComponent, ComponentLoaderService, ComponentRegister, simpleLoader } from 'epsgis';\nimport { SceneTreeUtils } from '../../utils/sceneTree-utils';\n/**\n *  @description 球\n *  @author ruir\n */\n@ComponentRegister({\n  uri: \"epsgis-planet-earth\",\n  path: \"epsplanet/components/earth\",\n  name: \"PlanetEarthComponent\"\n})\n@Component({\n  selector: 'epsgis-planet-earth',\n  templateUrl: './earth.component.html',\n  styleUrls: ['./earth.component.scss'],\n})\nexport class PlanetEarthComponent extends BaseMapComponent {\n  @ViewChild(\"earthContainer\", { static: true }) earthContainer: ElementRef;\n  //按顺序添加\n  resources: ReadonlyArray<string> = [\n    // \"XbsjCesium/Cesium.js\",\n    // \"XbsjCesium/XbsjCesium.js\",\n    \"XbsjEarth/XbsjEarth.js\"\n  ];\n  constructor(public componentLoader: ComponentLoaderService) {\n    super(componentLoader);\n  }\n  static getCompInfo() {\n    return { name: \"PlanetEarthComponent\", path: \"epsplanet/components/earth\" };\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    // this.is3D用来指示项目类型，非常重要，请勿删除\n    this.is3D = true;\n  }\n  initMap(): Promise<any> {\n    // this.is3D用来指示项目类型，非常重要，请勿删除\n    this.is3D = true;\n    return new Promise((resolve, reject) => {\n      const jsApi: string = this.appConfig.map.jsApi;\n      if (!jsApi) {\n        reject(\"没有配置jsApi\");\n        return;\n      }\n      const resFullPaths: string[] = [];\n      this.resources.forEach(path => {\n        resFullPaths.push(jsApi + \"/\" + path);\n      });\n      //直接引用该js会导致earthSdk无法使用\n      //因为它内部也是用得类似方法\n      // resFullPaths.push(\"assets/watch.js\");\n      simpleLoader.loadResources(resFullPaths, null, null, () => {\n        //全部加载完成\n        const XE = window[\"XE\"];\n        if (!XE) {\n          reject(\"XE undefined\");\n          return;\n        }\n        XE.ready().then(() => {\n          var earth = new XE.Earth(\"earthContainer\", {\n            homeButton: true,\n            timeline: false,\n            sceneModePicker: true\n          });\n          earth.interaction.picking.enabled = false\n          earth.interaction.picking.hoverEnable = false\n\n          const layerNode = SceneTreeUtils.loadLayers(this.config).children\n          console.log(layerNode)\n          earth.sceneTree.root.children.push(...layerNode);\n          earth.camera.navigator.showCompass = true; // 显示指北针\n          earth.camera.navigator.showDistanceLegend = true; // 显示比例尺                \n          //test\n          window[\"earth\"] = earth;\n          earth.getCurrentView = function () {\n            const td = Cesium.Math.toDegrees;\n            let lon = td(earth.czm.camera.positionCartographic.longitude).toFixed(5)\n            let lat = td(earth.czm.camera.positionCartographic.latitude).toFixed(5)\n            let height = earth.czm.camera.positionCartographic.height.toFixed(5)\n            let heading = td(earth.czm.camera.heading).toFixed(5)\n            let pitch = td(earth.czm.camera.pitch).toFixed(5)\n            let roll = td(earth.czm.camera.roll).toFixed(5)\n            console.log(`\"center\":[${lon},\\n${lat},\\n${height}],\\n\"heading\":${heading},\\n\"pitch\":${pitch},\\n\"roll\":${roll}`)\n          }\n          earth.RadiansTodegree=function(radians){\n            let pos=[]\n            radians.forEach(item=>{\n              pos.push(item/Math.PI*180)\n            })\n            console.log(pos)\n          }\n          if (this.config.mapOptions && this.config.mapOptions.center) {\n            let x = 116.26984645340727, y = 40.10171604578351, h = 230, heading = 0, pitch = 0;\n            if (this.config.mapOptions.center.length >= 1) {\n              x = this.config.mapOptions.center[0];\n            }\n            if (this.config.mapOptions.center.length >= 2) {\n              y = this.config.mapOptions.center[1];\n            }\n            if (this.config.mapOptions.center.length >= 3) {\n              h = this.config.mapOptions.center[2];\n            }\n            if (this.config.mapOptions.heading) {\n              heading = this.config.mapOptions.heading;\n            }\n            if (this.config.mapOptions.pitch) {\n              pitch = this.config.mapOptions.pitch;\n            }\n            earth.czm.viewer.scene.camera.setView({\n              destination: Cesium.Cartesian3.fromDegrees(x, y, h),\n              orientation: {\n                heading: Cesium.Math.toRadians(heading),\n                pitch: Cesium.Math.toRadians(pitch),\n                roll: 0\n              }\n            });\n          }\n          // var sceneModePicker = new Cesium.SceneModePicker('sceneModePickerContainer', earth.czm.scene);\n\n          resolve(earth);\n        });\n\n      });\n    });\n  }\n\n}\n","<div #earthContainer id=\"earthContainer\" class=\"earthContainer\">\n</div>\n<!-- 对于cesium，需要将ng-templete放在外面（放里面会因z-index影响导致图标显示不出来） -->\n<ng-template component-host> </ng-template>","import { Directive } from '@angular/core';\nimport { BaseWidgetComponent, PropWatcher } from 'epsgis';\n/**\n * \n */\n@Directive()\nexport class BasePlanetWidgetComponent extends BaseWidgetComponent {\n  /**\n   * earthSdk中通过_isVue判断的，误删\n   */\n  _isVue: boolean = true;\n  watchers: Array<Function> = [];\n  constructor() {\n    super();\n  }\n  getCesiumView() {\n    if (this.view) {\n      return this.view.czm.viewer;\n    }\n    return null;\n  }\n  // get XE() {\n  //   return window[\"XE\"];\n  // }\n  /**\n   * \n   * @param propertyName 属性名\n   * @param func 函数\n   * @param param { deep: true }\n   */\n  $watch(propertyName, func: Function, param) {\n    this.watchers.push(PropWatcher.watch(this, propertyName, (prop, oldval, newval) => {\n      // console.log(\"%s after %s,%s\", prop, oldval, newval);\n      func.call(func);\n    }));\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.watchers && this.watchers.length >= 1) {\n      this.watchers.forEach(f => f.call(f));\n    }\n    this.watchers.length = 0;\n  }\n}\n","import { Component, HostListener } from '@angular/core';\nimport { ComponentRegister } from 'epsgis';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\n\n@ComponentRegister({\n  uri:\"epsgis-planet-home\",\n  path:\"epsplanet/components/home\",\n  name:\"PlanetHomeComponent\"\n})\n@Component({\n  selector: 'epsgis-planet-home',\n  template: `<i  nz-icon [nzIconfont]=\"'icon-epsgis-home'\"> </i>`,\n  host: {\n    \"[class.jimu-widget-onscreen-icon]\": \"true\",\n    \"title\": \"home\"\n  }\n})\nexport class PlanetHomeComponent extends BasePlanetWidgetComponent {\n  constructor() {\n    super();\n  }\n  static getCompInfo() {\n    return { path: \"epsplanet/components/home\" };\n  }\n  ngOnInit() {\n    this.view.czm.viewer.homeButton._container.hidden = true\n  }\n  /**\n   * \n   * @param evt \n   */\n  @HostListener('click', ['$event'])\n  onMouseClick(evt) {\n    //this.view.czm.viewer.camera.setView(     { destination: Cesium.Cartesian3.fromDegrees(110.20, 34.55, 3000000)});\n    this.view.czm.viewer.homeButton._element.click();\n  }\n\n}\n","<!-- <h3>{{selectedNode.title}}</h3> -->\r\n<div class=\"schema\" *ngIf=\"type=='影像'\">\r\n  <nz-row *ngFor=\"let item of config.basemapSchema\">\r\n      <nz-col nzSpan=\"4\">\r\n          <span>{{item.zh}}</span>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"14\">\r\n          <nz-slider [nzMin]=\"0\" [nzMax]=\"1\" [nzStep]=\"0.01\" [(ngModel)]=\"selectedNode['origin'][item.en]\"></nz-slider>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"2\">\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"1\" [nzStep]=\"0.01\" [ngStyle]=\"{ marginLeft: '16px' }\"\r\n              [(ngModel)]=\"selectedNode['origin'][item.en]\">\r\n          </nz-input-number>\r\n      </nz-col>\r\n  </nz-row>\r\n</div>\r\n<div class=\"schema\" *ngIf=\"type!=='影像'\">\r\n  <nz-row *ngFor=\"let item of config.tilesSchema\">\r\n      <nz-col nzSpan=\"4\">\r\n          <span>{{item.zh}}</span>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"14\" *ngIf=\"item.zh=='镜面强度'\">\r\n          <nz-slider [nzMin]=\"0\" [nzMax]=\"1\" [nzStep]=\"0.01\" [(ngModel)]=\"selectedNode['origin'][item.en][1]\"></nz-slider>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"14\" *ngIf=\"item.zh=='散射强度'\">\r\n          <nz-slider [nzMin]=\"0\" [nzMax]=\"1\" [nzStep]=\"0.01\" [(ngModel)]=\"selectedNode['origin'][item.en][0]\"></nz-slider>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"14\" *ngIf=\"item.zh=='显示精度'\">\r\n          <nz-slider [nzMin]=\"0\" [nzMax]=\"256\" [nzStep]=\"1\" [(ngModel)]=\"selectedNode['origin'][item.en]\"></nz-slider>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"14\" *ngIf=\"item.zh=='材质底色'\">\r\n          <nz-slider [nzMin]=\"0\" [nzMax]=\"5\" [nzStep]=\"0.01\" [(ngModel)]=\"selectedNode['origin'][item.en]\"></nz-slider>\r\n      </nz-col>\r\n\r\n      <nz-col nzSpan=\"2\" *ngIf=\"item.zh=='镜面强度'\">\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"1\" [nzStep]=\"0.01\" [ngStyle]=\"{ marginLeft: '16px' }\"\r\n              [(ngModel)]=\"selectedNode['origin'][item.en][1]\">\r\n          </nz-input-number>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"2\" *ngIf=\"item.zh=='散射强度'\">\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"1\" [nzStep]=\"0.01\" [ngStyle]=\"{ marginLeft: '16px' }\"\r\n              [(ngModel)]=\"selectedNode['origin'][item.en][0]\">\r\n          </nz-input-number>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"2\" *ngIf=\"item.zh=='显示精度'\">\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"256\" [nzStep]=\"1\" [ngStyle]=\"{ marginLeft: '16px' }\"\r\n              [(ngModel)]=\"selectedNode['origin'][item.en]\">\r\n          </nz-input-number>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"2\" *ngIf=\"item.zh=='材质底色'\">\r\n          <nz-input-number [nzMin]=\"0\" [nzMax]=\"5\" [nzStep]=\"0.01\" [ngStyle]=\"{ marginLeft: '16px' }\"\r\n              [(ngModel)]=\"selectedNode['origin'][item.en]\">\r\n          </nz-input-number>\r\n      </nz-col>\r\n  </nz-row>\r\n</div>\r\n<!-- <button nz-button (click)=\"test()\">test</button>\r\n<button nz-button nz-popover nzPopoverTitle=\"Title\" [nzPopoverContent]=\"contentTemplate\" nzPopoverTrigger=\"click\" (click)=\"loadlocate()\">加载&定位</button>\r\n<ng-template #contentTemplate>\r\n  <div>\r\n    <p>Content</p>\r\n    <p>Content</p>\r\n  </div>\r\n</ng-template> -->","import { ChangeDetectorRef, Component, SimpleChanges , OnInit, Input } from '@angular/core';\nimport { ComponentRegister } from 'epsgis';\nimport { NzContextMenuService, NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/tree';\nimport { SceneTreeUtils } from '../../utils/sceneTree-utils';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\n\n@ComponentRegister({\n  uri: \"epsgis-planet-layer-manager\",\n  path: \"epsplanet/components/layer-manager\",\n  name: \"PlanetLayerManagerComponent\"\n})\n@Component({\n  selector: \"epsgis-planet-layer-manager\",\n  templateUrl: \"./layer-manager.component.html\",\n  styleUrls: [\"./layer-manager.component.scss\"]\n})\nexport class PlanetLayerManagerComponent extends BasePlanetWidgetComponent {\n  // @Input() config;\n  @Input() selectedNode;\n  @Input() type;\n  config={\n    \"basemapSchema\":[\n        {\"en\":\"alpha\",\"zh\":\"透明度\"},\n        {\"en\":\"brightness\",\"zh\":\"亮度\"},\n        {\"en\":\"saturation\",\"zh\":\"饱和度\"},\n        {\"en\":\"contrast\",\"zh\":\"对比度\"},\n        {\"en\":\"hue\",\"zh\":\"色相\"},\n        {\"en\":\"gamma\",\"zh\":\"伽马\"}\n    ],\n    \"tilesSchema\":[\n        {\n            \"en\":\"maximumScreenSpaceError\",\n            \"zh\":\"显示精度\"\n        },\n        {\n            \"en\":\"imageBasedLightingFactor\",\n            \"zh\":\"散射强度\"\n        },\n        {\n            \"en\":\"luminanceAtZenith\",\n            \"zh\":\"材质底色\"\n        },\n        {\n            \"en\":\"imageBasedLightingFactor\",\n            \"zh\":\"镜面强度\"\n        }\n    ]\n}\n  value1: 0;\n  activatedNode?: NzTreeNode;\n  openFolder(data: NzTreeNode | NzFormatEmitEvent): void {\n    // do something if u want\n    console.log(data)\n    if (data instanceof NzTreeNode) {\n      data.isExpanded = !data.isExpanded;\n    } else {\n      const node = data.node;\n      if (node) {\n        node.isExpanded = !node.isExpanded;\n      }\n    }\n  }\n\n  activeNode(data: NzFormatEmitEvent): void {\n    this.activatedNode = data.node!;\n  }\n\n  contextMenu($event: MouseEvent, menu: NzDropdownMenuComponent): void {\n    this.nzContextMenuService.create($event, menu);\n  }\n  constructor(private nzContextMenuService: NzContextMenuService) {\n    super();\n  }\n  selectDropdown(): void {\n    // do something\n  }\n\n  layerNodes: any = [];\n\n  static getCompInfo() {\n    return { name: \"PlanetLayerManagerComponent\", path: \"epsplanet/components/layer-manager\" };\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    // this.selectedNode=window[\"selectedNode\"]\n    // this.type=this.selectedNode[\"origin\"].hasOwnProperty('luminanceAtZenith')?\"瓦片\":\"影像\";\n    // setInterval(() => {\n    //   this.selectedNode=window[\"selectedNode\"]\n    //   this.type=this.selectedNode[\"origin\"].hasOwnProperty('luminanceAtZenith')?\"瓦片\":\"影像\";\n    // }, 100);\n\n  }\n  loadlocate() {\n    var isshow, _layers, layer, format, style, tileMatrixSet;\n    var wmts = new XE.Tool.WMTSParser();\n    // console.log(wmts)\n    let url = \"http://jojo1986.f3322.net:8888/geoserver/gwc/service/wmts?REQUEST=GetCapabilities\";\n    // url = wmts.addUrlParam(url);\n    wmts\n      .parser(url)\n      .then(layers => {\n        console.log(layers)\n        isshow = false;\n        _layers = layers;\n        if (layers.length == 0) {\n          console.log(\n            \"server has no supproted layers\",\n            \"warning\"\n          );\n        } else {\n          //默认选择第一个Layer\n          layer = layers[0];\n          console.log(layer.rectangle)\n          format = layer.urls[0].format;\n          style = layer.styles[0].id;\n          tileMatrixSet = layer.tileMatrixSets[0];\n          this.view.sceneTree.root.children.push(\n            {\n              \"czmObject\": {\n                \"xbsjType\": \"Imagery\",\n                // \"xbsjGuid\": \"02cb3e7e-9ab5-4aa0-8664-a28e2ad94abd\",\n                \"name\": layer.title,\n                // \"rectangle\": layer.rectangle,\n                \"xbsjImageryProvider\": {\n                  \"XbsjImageryProvider\": {},\n                  \"UrlTemplateImageryProvider\": {},\n                  \"WebMapTileServiceImageryProvider\": {\n                    \"url\": layer.urls[0].template,\n                    \"format\": format,\n                    \"layer\": layer.title,\n                    \"style\": style,\n                    \"tileMatrixSetID\": tileMatrixSet.tileMatrixSetID,\n                    \"tileMatrixLabels\": tileMatrixSet.params.tileMatrixLabels,\n                    \"tilingScheme\": tileMatrixSet.params.tilingScheme,\n                    \"maximumLevel\": tileMatrixSet.maximumLevel\n                  },\n                  \"createTileMapServiceImageryProvider\": {},\n                  \"type\": \"WebMapTileServiceImageryProvider\"\n                }\n              }\n            }\n          )\n          var viewer = window['earth'].czm.viewer;\n          viewer.camera.flyTo({\n            destination: Cesium.Rectangle.fromDegrees(...layer.rectangle)\n          })\n          // this.view.camera.flyTo({\n          //   destination:Cesium.Rectangle.fromDegrees(2.095444729128294, 0.5829525047032451, 2.097444730801541, 0.5843758506702889)\n          // })\n        }\n      })\n      .catch(err => {\n        isshow = false;\n        console.log(\n          \"GetCapabilities failed:\" + err.message,\n          \"error\"\n        );\n      });\n    // console.log(url, layer)\n  }\n  test() {\n    setTimeout(() => {\n      console.log(this.selectedNode)\n    }, 100);\n  }\n  onDblClickNode($event) {\n    console.log($event.node.origin.origin)\n  }\n  /**\n  * 选中状态改变\n  */\n  onCheckedChange(evt: NzFormatEmitEvent): void {\n    if (evt.eventName !== \"check\" || !evt.node) {\n      return;\n    }\n    if (evt.node.isChecked) {\n      //加载图层\n      SceneTreeUtils.GetXbsjCzmObject(evt.node).show = true;\n    } else {\n      //移除图层\n      SceneTreeUtils.GetXbsjCzmObject(evt.node).show = false;\n    }\n  }\n  onRightClick($event) {\n\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}","<nz-tree \n    #nzTreeComponent\n    [nzData]=\"layerNodes\" \n    nzBlockNode \n    nzCheckable \n    (nzClick)=\"onLeftClickNode($event)\"\n    (nzDblClick)=\"onDblClickNode($event);\" \n    (nzCheckBoxChange)=\"onCheckedChange($event);\"\n    (nzContextMenu)=\"onRightClick($event);\"\n    [nzTreeTemplate]=\"nzTreeTemplate\">\n</nz-tree>\n<ng-template #nzTreeTemplate let-node let-origin=\"origin\">\n    <span class=\"custom-node\">\n      <span *ngIf=\"!node.isLeaf\">\n        <span class=\"folder-name\">{{ node.title }}</span>\n      </span>\n      <span *ngIf=\"node.isLeaf\" class=\"leaf\">\n        <!-- <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\" (click)=\"openFolder(node)\"></i> -->\n        <span class=\"folder-name\">{{ node.title }}</span>\n        <i title=\"参数调整\" style=\"float: right;\" nz-icon [nzIconfont]=\"'icon-epsgis-setting'\" (click)=\"setting(node)\"></i>\n        <i title=\"缩放至\" style=\"float: right;\" nz-icon [nzIconfont]=\"'icon-epsgis-wodeweizhi1'\" (click)=\"flyTo(node)\"></i>\n\n        <!-- <div *ngIf=\"node.isExpanded\">\n            <i nz-icon [nzIconfont]=\"'icon-epsgis-wodeweizhi1'\" (click)=\"flyTo(node)\"></i>\n        </div> -->\n      </span>\n    </span>\n</ng-template>","import { Component, TemplateRef } from '@angular/core';\nimport { ComponentRegister, ModalManagerService } from 'epsgis';\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/tree';\nimport { SceneTreeUtils } from '../../utils/sceneTree-utils';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\nimport { PlanetLayerManagerComponent } from '../layer-manager/layer-manager.component';\n@ComponentRegister({\n  uri: \"epsgis-planet-layer-list\",\n  path: \"epsplanet/components/layer-list\",\n  name: \"PlanetLayerListComponent\"\n})\n@Component({\n  selector: 'epsgis-planet-layer-list',\n  templateUrl: './layer-list.component.html',\n  styleUrls: ['./layer-list.component.scss'],\n})\nexport class PlanetLayerListComponent extends BasePlanetWidgetComponent {\n  layerNodes: any = [];\n  selectedNode: any;\n  type: any;\n  listOfData = [];\n  isShow = false;\n  activatedNode?: NzTreeNode;\n  tplContent: TemplateRef<{}>\n  constructor(private modalService: ModalManagerService) {\n    super();\n  }\n  static getCompInfo() {\n    return { name: \"PlanetLayerListComponent\", path: \"epsplanet/components/layer-list\" };\n  }\n  ngOnInit() {\n    //正常\n    // XE.MVVM.watch(() => [...this.view.sceneTree.root.children], () => {\n    //   console.log('sceneTree发生变化！');\n    // });\n    //正常\n    // var uw3 = XE.MVVM.watch(this.view.sceneTree.root.children, () => {\n    //   console.log('sceneTree发生变化333！');\n    // });\n    //执行多次\n    // var uw2 = XE.MVVM.watch(this.view.sceneTree.root, 'children', () => {\n    //   console.log('sceneTree发生变化222');\n    // });\n    //执行多次\n    // XE.MVVM.watch(() => this.view.sceneTree.root.toJSONStr(), () => console.log('123'))\n    var uw3 = XE.MVVM.watch(() => [...this.view.sceneTree.root.children], () => {\n      this.loadSceneTree();\n    });\n  }\n  openFolder(data: NzTreeNode | NzFormatEmitEvent): void {\n    // do something if u want\n    console.log(data)\n    if (data instanceof NzTreeNode) {\n      data.isExpanded = !data.isExpanded;\n    } else {\n      const node = data.node;\n      if (node) {\n        node.isExpanded = !node.isExpanded;\n      }\n    }\n  }\n  loadSceneTree() {\n    setTimeout(() => {\n      const _layerNodes = SceneTreeUtils.SceneTree2NgZorroTree(this.view.sceneTree.$refs.layerlist);\n      // console.log(\"sceneTree:\", _layerNodes)\n      this.layerNodes = _layerNodes[0][\"children\"];\n      // console.log(this.layerNodes)\n    }, 100);\n\n  }\n\n  setting(node) {\n    // console.log(this.config)\n    this.selectedNode = node.origin;\n    this.type = this.selectedNode[\"origin\"].hasOwnProperty('luminanceAtZenith') ? \"瓦片\" : \"影像\";\n    this.isShow = true;\n    this.modalService.create({\n      title: \"图层“\" + node.title + \"”参数\",\n      content: PlanetLayerManagerComponent,\n      componentParams: {\n        selectedNode: this.selectedNode,\n        type: this.type\n      },\n      footer: null,\n      mask: false,\n      width: 320\n    })\n  }\n  flyTo(node) {\n    node.origin.origin.flyTo()\n    // console.log(node)\n  }\n\n  /**\n   * 单击节点\n   */\n  onLeftClickNode(evt: NzFormatEmitEvent) {\n    console.log(evt.node)\n    this.selectedNode = evt.node.origin;\n  }\n  /**\n   * 选中状态改变\n   */\n  onCheckedChange(evt: NzFormatEmitEvent) {\n    console.log(evt)\n    if (evt.eventName !== \"check\" || !evt.node) {\n      return;\n    }\n    this.showOrHideLayer(evt.node)\n  }\n  showOrHideLayer(parentNode) {\n    if (!parentNode.children || parentNode.children.length == 0) {\n      if (parentNode.isChecked) {\n        //加载图层\n        SceneTreeUtils.GetXbsjCzmObject(parentNode).show = true;\n      } else {\n        //移除图层\n        SceneTreeUtils.GetXbsjCzmObject(parentNode).show = false;\n      }\n    } else {\n      parentNode.children.forEach(item => {\n        this.showOrHideLayer(item)\n      })\n    }\n  }\n  /**\n   * 双击节点\n   */\n  onDblClickNode(evt: NzFormatEmitEvent) {\n    if (evt.eventName !== \"dblclick\" || !evt.node) {\n      return;\n    }\n    SceneTreeUtils.GetXbsjCzmObject(evt.node).flyTo();\n  }\n  /**\n   * 显示右键菜单\n   */\n  onRightClick(evt: NzFormatEmitEvent) {\n\n  }\n}\n","<div>\n  <span>{{item.X.label}}</span>\n  <nz-input-number\n      [(ngModel)]=\"XValue\" \n      [nzMin]=\"item.X.min\" \n      [nzMax]=\"item.X.max\"\n      [nzStep]=\"0.0001\" \n      [nzPlaceHolder]=\"item.X.placeHolder\">\n  </nz-input-number>\n</div>\n<div>\n  <span>{{item.Y.label}}</span>\n  <nz-input-number \n      [(ngModel)]=\"YValue\" \n      [nzMin]=\"item.Y.min\" \n      [nzMax]=\"item.Y.max\"\n      [nzStep]=\"0.0001\" \n      [nzPlaceHolder]=\"item.Y.placeHolder\">\n  </nz-input-number>\n</div>\n<div *ngIf=\"item.Z\">\n  <span>{{item.Z.label}}</span>\n  <nz-input-number \n      [(ngModel)]=\"ZValue\" \n      [nzStep]=\"1\" \n      [nzPlaceHolder]=\"item.Z.placeHolder\">\n  </nz-input-number>\n</div>\n<div>\n  <button nz-button nzType=\"primary\" (click)=\"location()\">定位</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ComponentRegister } from 'epsgis';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\n\n@ComponentRegister({\n  uri:\"epsgis-planet-location\",\n  path:\"epsplanet/components/location\",\n  name:\"PlanetLocationComponent\"\n})\n@Component({\n  selector: 'epsgis-planet-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.scss'],\n})\nexport class PlanetLocationComponent extends BasePlanetWidgetComponent implements OnInit {\n  markerXY: any;\n  // 经度 或 x\n  XValue = 0;\n  // 纬度 或 y\n  YValue = 0;\n  //高度\n  ZValue = 0;\n\n  //地理坐标系  --------  目前只做了此坐标系下的定位\n  item4326 = {\n    X: {\n      label: \"经度：\",\n      min: \"-180\",\n      max: \"180\",\n      placeHolder: \"请输入经度\"\n    },\n    Y: {\n      label: \"纬度：\",\n      min: \"-90\",\n      max: \"90\",\n      placeHolder: \"请输入纬度\"\n    },\n    Z: {\n      label: \"高度：\",\n      placeHolder: \"请输入高度\"\n    }\n  };\n  //\n  itemOther = {\n    X: {\n      label: \"X：\",\n      min: \"-99999999\",\n      max: \"99999999\",\n      placeHolder: \"请输入横坐标\"\n    },\n    Y: {\n      label: \"Y：\",\n      min: \"-99999999\",\n      max: \"99999999\",\n      placeHolder: \"请输入纵坐标\"\n    }\n  };\n\n  // 默认4326\n  item: any = this.item4326;\n\n  constructor(\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.initialize();\n  }\n  /**\n  * 获取组件信息\n  */\n  static getCompInfo() {\n    return { path: \"epsplanet/components/location\" };\n  }\n  //\n  initialize() {\n    this.XValue = this.config.longitude;\n    this.YValue = this.config.latitude;\n    this.ZValue = this.config.height;\n  }\n  //开始定位\n  location() {\n    var position = null;\n    //删除之前添加的实体\n    if (this.markerXY) {\n      this.view.czm.viewer.entities.remove(this.markerXY);\n    }\n    if (true) {\n      position = Cesium.Cartesian3.fromDegrees(this.XValue, this.YValue, this.ZValue)\n    } else {\n      // this.position = \n    }\n    //添加定位点实体\n    this.markerXY = new Cesium.Entity({\n      id: '视角定位坐标',\n      position: position, \n      point: {\n        pixelSize: 6,\n        color: Cesium.Color.WHITE.withAlpha(0.9),\n        outlineColor: Cesium.Color.WHITE.withAlpha(0.9),\n        outlineWidth: 1\n      },\n      billboard: {\n        image: this.folderUrl+\"images/location4.png\",\n        horizontalOrigin: Cesium.HorizontalOrigin.CENTER,\n        verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\n        scale: .6\n      },\n    });\n    this.view.czm.viewer.entities.add(this.markerXY);\n    //定位\n    this.view.czm.camera.setView({\n      destination: position\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n}\n","<div class=\"jimu-widget-onscreen-icon\" title=\"模式切换\">\n  <div nz-popover [(nzPopoverVisible)]=\"visible\" nzPopoverTrigger=\"click\" [nzPopoverContent]=\"contentTemplate\"\n    class=\"icon\" [nzPopoverPlacement]=\"'right'\">\n    <ng-container *ngIf=\"viewType=='3d'\">\n      <svg:svg class=\"\" width=\"32\" height=\"32\" viewBox=\"0 0 64 64\">\n        <path\n          d=\"m 32.401392,4.9330437 c -7.087603,0 -14.096095,2.884602 -19.10793,7.8946843 -5.0118352,5.010083 -7.9296167,11.987468 -7.9296167,19.072999 0,7.085531 2.9177815,14.097848 7.9296167,19.107931 4.837653,4.835961 11.541408,7.631372 18.374354,7.82482 0.05712,0.01231 0.454119,0.139729 0.454119,0.139729 l 0.03493,-0.104797 c 0.08246,7.84e-4 0.162033,0.03493 0.244525,0.03493 0.08304,0 0.161515,-0.03414 0.244526,-0.03493 l 0.03493,0.104797 c 0,0 0.309474,-0.129487 0.349323,-0.139729 6.867765,-0.168094 13.582903,-2.965206 18.444218,-7.82482 2.558195,-2.5573 4.551081,-5.638134 5.903547,-8.977584 1.297191,-3.202966 2.02607,-6.661489 2.02607,-10.130347 0,-6.237309 -2.366261,-12.31219 -6.322734,-17.116794 -0.0034,-0.02316 0.0049,-0.04488 0,-0.06986 -0.01733,-0.08745 -0.104529,-0.278855 -0.104797,-0.279458 -5.31e-4,-0.0012 -0.522988,-0.628147 -0.523984,-0.62878         -3.47e-4,-2.2e-4 -0.133444,-0.03532 -0.244525,-0.06987 C 51.944299,13.447603 51.751076,13.104317 51.474391,12.827728 46.462556,7.8176457 39.488996,4.9330437 32.401392,4.9330437 z m -2.130866,3.5281554 0.104797,9.6762289 c -4.111695,-0.08361 -7.109829,-0.423664 -9.257041,-0.943171 1.198093,-2.269271 2.524531,-4.124404 3.91241,-5.414496 2.167498,-2.0147811 3.950145,-2.8540169 5.239834,-3.3185619 z m 2.794579,0 c 1.280302,0.4754953 3.022186,1.3285948 5.065173,3.2486979 1.424667,1.338973 2.788862,3.303645 3.982275,5.728886 -2.29082,0.403367 -5.381258,0.621049 -8.942651,0.698645 L 33.065105,8.4611991 z m 5.728886,0.2445256 c 4.004072,1.1230822 7.793098,3.1481363 10.724195,6.0782083 0.03468,0.03466 0.07033,0.06991 0.104797,0.104797 -0.45375,0.313891 -0.923054,0.663002 -1.956205,1.082899 -0.647388,0.263114 -1.906242,0.477396 -2.829511,0.733577 -1.382296,-2.988132         -3.027146,-5.368585 -4.785716,-7.0213781 -0.422866,-0.397432 -0.835818,-0.6453247 -1.25756,-0.9781032 z m -15.33525,0.7685092 c -0.106753,0.09503 -0.207753,0.145402 -0.31439,0.244526 -1.684973,1.5662541 -3.298068,3.8232211 -4.680919,6.5672591 -0.343797,-0.14942 -1.035052,-0.273198 -1.292493,-0.419186 -0.956528,-0.542427 -1.362964,-1.022024 -1.537018,-1.292493 -0.0241,-0.03745 -0.01868,-0.0401 -0.03493,-0.06986 2.250095,-2.163342 4.948824,-3.869984 7.859752,-5.0302421 z m -9.641296,7.0912431 c 0.464973,0.571618 0.937729,1.169056 1.956205,1.746612 0.349907,0.198425 1.107143,0.335404 1.537018,0.523983 -1.20166,3.172984 -1.998037,7.051901 -2.165798,11.772162 C 14.256557,30.361384 12.934823,30.161483 12.280427,29.90959 10.644437,29.279855 9.6888882,28.674891 9.1714586,28.267775 8.6540289,27.860658 8.6474751,27.778724 8.6474751,27.778724 l -0.069864,0.03493 C 9.3100294,23.691285         11.163248,19.798527 13.817445,16.565477 z m 37.552149,0.523984 c 2.548924,3.289983 4.265057,7.202594 4.890513,11.318043 -0.650428,0.410896 -1.756876,1.001936 -3.563088,1.606882 -1.171552,0.392383 -3.163859,0.759153 -4.960377,1.117832 -0.04367,-4.752703 -0.784809,-8.591423 -1.88634,-11.807094 0.917574,-0.263678 2.170552,-0.486495 2.864443,-0.76851 1.274693,-0.518066 2.003942,-1.001558 2.654849,-1.467153 z m -31.439008,2.619917 c 2.487341,0.672766 5.775813,1.137775 10.479669,1.222628 l 0.104797,10.689263 0,0.03493 0,0.733577 c -5.435005,-0.09059 -9.512219,-0.519044 -12.610536,-1.117831 0.106127,-4.776683 0.879334,-8.55791 2.02607,-11.562569 z m 23.264866,0.31439 c 1.073459,3.067541 1.833795,6.821314 1.816476,11.702298 -3.054474,0.423245 -7.062018,0.648559 -11.702298,0.698644 l 0,-0.838373 -0.104796,-10.654331 c 4.082416,-0.0864 7.404468,-0.403886 9.990618,-0.908238 z         M 8.2632205,30.922625 c 0.7558676,0.510548 1.5529563,1.013339 3.0041715,1.57195 0.937518,0.360875 2.612202,0.647642 3.91241,0.978102 0.112814,3.85566 0.703989,7.107756 1.606883,9.920754 -1.147172,-0.324262 -2.644553,-0.640648 -3.423359,-0.978102 -1.516688,-0.657177 -2.386627,-1.287332 -2.864443,-1.71168 -0.477816,-0.424347 -0.489051,-0.489051 -0.489051,-0.489051 L 9.8002387,40.319395 C 8.791691,37.621767 8.1584238,34.769583 8.1584238,31.900727 c 0,-0.330153 0.090589,-0.648169 0.1047967,-0.978102 z m 48.2763445,0.419186 c 0.0047,0.188973 0.06986,0.36991 0.06986,0.558916 0,2.938869 -0.620228,5.873558 -1.676747,8.628261 -0.07435,0.07583 -0.06552,0.07411 -0.454119,0.349323 -0.606965,0.429857 -1.631665,1.042044 -3.318562,1.676747 -1.208528,0.454713 -3.204964,0.850894 -5.135038,1.25756 0.84593,-2.765726 1.41808,-6.005357 1.606883,-9.815957 2.232369,-0.413371 4.483758,-0.840201         5.938479,-1.327425 1.410632,-0.472457 2.153108,-0.89469 2.96924,-1.327425 z m -38.530252,2.864443 c 3.208141,0.56697 7.372279,0.898588 12.575603,0.978103 l 0.174662,9.885821 c -4.392517,-0.06139 -8.106722,-0.320566 -10.863925,-0.803441 -1.051954,-2.664695 -1.692909,-6.043794 -1.88634,-10.060483 z m 26.793022,0.31439 c -0.246298,3.923551 -0.877762,7.263679 -1.816476,9.885822 -2.561957,0.361954 -5.766249,0.560708 -9.431703,0.62878 l -0.174661,-9.815957 c 4.491734,-0.04969 8.334769,-0.293032 11.42284,-0.698645 z M 12.035901,44.860585 c 0.09977,0.04523 0.105535,0.09465 0.209594,0.139729 1.337656,0.579602 3.441099,1.058072 5.589157,1.537018 1.545042,3.399208 3.548524,5.969402 5.589157,7.789888 -3.034411,-1.215537 -5.871615,-3.007978 -8.174142,-5.309699 -1.245911,-1.245475 -2.271794,-2.662961 -3.213766,-4.156936 z m 40.69605,0 c -0.941972,1.493975 -1.967855,2.911461         -3.213765,4.156936 -2.74253,2.741571 -6.244106,4.696717 -9.955686,5.868615 0.261347,-0.241079 0.507495,-0.394491 0.768509,-0.663713 1.674841,-1.727516 3.320792,-4.181056 4.645987,-7.265904 2.962447,-0.503021 5.408965,-1.122293 7.161107,-1.781544 0.284034,-0.106865 0.337297,-0.207323 0.593848,-0.31439 z m -31.404076,2.305527 c 2.645807,0.376448 5.701178,0.649995 9.466635,0.698645 l 0.139729,7.789888 c -1.38739,-0.480844 -3.316218,-1.29837 -5.659022,-3.388427 -1.388822,-1.238993 -2.743668,-3.0113 -3.947342,-5.100106 z m 20.365491,0.104797 c -1.04872,2.041937 -2.174337,3.779068 -3.353494,4.995309 -1.853177,1.911459 -3.425515,2.82679 -4.611055,3.353494 l -0.139729,-7.789887 c 3.13091,-0.05714 5.728238,-0.278725 8.104278,-0.558916 z\">\n        </path>\n      </svg:svg>\n    </ng-container>\n    <ng-container *ngIf=\"viewType=='2d'\">\n      <svg:svg class=\"\" width=\"32\" height=\"32\" viewBox=\"0 0 64 64\">\n        <path\n          d=\"m 2.9825053,17.550598 0,1.368113 0,26.267766 0,1.368113 1.36811,0 54.9981397,0 1.36811,0 0,-1.368113 0,-26.267766 0,-1.368113 -1.36811,0 -54.9981397,0 -1.36811,0 z m 2.73623,2.736226 10.3292497,0 0,10.466063 -10.3292497,0 0,-10.466063 z m 13.0654697,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 10.32926,0 0,10.466063 -10.32926,0 0,-10.466063 z m -41.9326497,13.202288 10.3292497,0 0,10.329252 -10.3292497,0 0,-10.329252 z m 13.0654697,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 10.32926,0 0,10.329252 -10.32926,0 0,-10.329252 z\">\n        </path>\n      </svg:svg>\n    </ng-container>\n    <ng-container *ngIf=\"viewType=='columbus'\">\n      <svg:svg class=\"\" width=\"32\" height=\"32\" viewBox=\"0 0 64 64\">\n        <path\n          d=\"m 14.723969,17.675598 -0.340489,0.817175 -11.1680536,26.183638 -0.817175,1.872692 2.076986,0 54.7506996,0 2.07698,0 -0.81717,-1.872692 -11.16805,-26.183638 -0.34049,-0.817175 -0.91933,0 -32.414586,0 -0.919322,0 z m 1.838643,2.723916 6.196908,0 -2.928209,10.418977 -7.729111,0 4.460412,-10.418977 z m 9.02297,0 4.903049,0 0,10.418977 -7.831258,0 2.928209,-10.418977 z m 7.626964,0 5.584031,0 2.62176,10.418977 -8.205791,0 0,-10.418977 z m 8.410081,0 5.51593,0 4.46042,10.418977 -7.38863,0 -2.58772,-10.418977 z m -30.678091,13.142892 8.103649,0 -2.89416,10.282782 -9.6018026,0 4.3923136,-10.282782 z m 10.929711,0 8.614384,0 0,10.282782 -11.508544,0 2.89416,-10.282782 z m 11.338299,0 8.852721,0 2.58772,10.282782 -11.440441,0 0,-10.282782 z m 11.678781,0 7.86531,0 4.39231,10.282782 -9.6699,0 -2.58772,-10.282782 z\">\n        </path>\n      </svg:svg>\n    </ng-container>\n  </div>\n</div>\n\n\n<ng-template #contentTemplate>\n  <div class=\"container\">\n    <div class=\"mode\" (click)=\"changeViewMode('3d');\">\n      <svg:svg class=\"\" width=\"40\" height=\"40\" viewBox=\"0 0 64 64\">\n        <path\n          d=\"m 32.401392,4.9330437 c -7.087603,0 -14.096095,2.884602 -19.10793,7.8946843 -5.0118352,5.010083 -7.9296167,11.987468 -7.9296167,19.072999 0,7.085531 2.9177815,14.097848 7.9296167,19.107931 4.837653,4.835961 11.541408,7.631372 18.374354,7.82482 0.05712,0.01231 0.454119,0.139729 0.454119,0.139729 l 0.03493,-0.104797 c 0.08246,7.84e-4 0.162033,0.03493 0.244525,0.03493 0.08304,0 0.161515,-0.03414 0.244526,-0.03493 l 0.03493,0.104797 c 0,0 0.309474,-0.129487 0.349323,-0.139729 6.867765,-0.168094 13.582903,-2.965206 18.444218,-7.82482 2.558195,-2.5573 4.551081,-5.638134 5.903547,-8.977584 1.297191,-3.202966 2.02607,-6.661489 2.02607,-10.130347 0,-6.237309 -2.366261,-12.31219 -6.322734,-17.116794 -0.0034,-0.02316 0.0049,-0.04488 0,-0.06986 -0.01733,-0.08745 -0.104529,-0.278855 -0.104797,-0.279458 -5.31e-4,-0.0012 -0.522988,-0.628147 -0.523984,-0.62878         -3.47e-4,-2.2e-4 -0.133444,-0.03532 -0.244525,-0.06987 C 51.944299,13.447603 51.751076,13.104317 51.474391,12.827728 46.462556,7.8176457 39.488996,4.9330437 32.401392,4.9330437 z m -2.130866,3.5281554 0.104797,9.6762289 c -4.111695,-0.08361 -7.109829,-0.423664 -9.257041,-0.943171 1.198093,-2.269271 2.524531,-4.124404 3.91241,-5.414496 2.167498,-2.0147811 3.950145,-2.8540169 5.239834,-3.3185619 z m 2.794579,0 c 1.280302,0.4754953 3.022186,1.3285948 5.065173,3.2486979 1.424667,1.338973 2.788862,3.303645 3.982275,5.728886 -2.29082,0.403367 -5.381258,0.621049 -8.942651,0.698645 L 33.065105,8.4611991 z m 5.728886,0.2445256 c 4.004072,1.1230822 7.793098,3.1481363 10.724195,6.0782083 0.03468,0.03466 0.07033,0.06991 0.104797,0.104797 -0.45375,0.313891 -0.923054,0.663002 -1.956205,1.082899 -0.647388,0.263114 -1.906242,0.477396 -2.829511,0.733577 -1.382296,-2.988132         -3.027146,-5.368585 -4.785716,-7.0213781 -0.422866,-0.397432 -0.835818,-0.6453247 -1.25756,-0.9781032 z m -15.33525,0.7685092 c -0.106753,0.09503 -0.207753,0.145402 -0.31439,0.244526 -1.684973,1.5662541 -3.298068,3.8232211 -4.680919,6.5672591 -0.343797,-0.14942 -1.035052,-0.273198 -1.292493,-0.419186 -0.956528,-0.542427 -1.362964,-1.022024 -1.537018,-1.292493 -0.0241,-0.03745 -0.01868,-0.0401 -0.03493,-0.06986 2.250095,-2.163342 4.948824,-3.869984 7.859752,-5.0302421 z m -9.641296,7.0912431 c 0.464973,0.571618 0.937729,1.169056 1.956205,1.746612 0.349907,0.198425 1.107143,0.335404 1.537018,0.523983 -1.20166,3.172984 -1.998037,7.051901 -2.165798,11.772162 C 14.256557,30.361384 12.934823,30.161483 12.280427,29.90959 10.644437,29.279855 9.6888882,28.674891 9.1714586,28.267775 8.6540289,27.860658 8.6474751,27.778724 8.6474751,27.778724 l -0.069864,0.03493 C 9.3100294,23.691285         11.163248,19.798527 13.817445,16.565477 z m 37.552149,0.523984 c 2.548924,3.289983 4.265057,7.202594 4.890513,11.318043 -0.650428,0.410896 -1.756876,1.001936 -3.563088,1.606882 -1.171552,0.392383 -3.163859,0.759153 -4.960377,1.117832 -0.04367,-4.752703 -0.784809,-8.591423 -1.88634,-11.807094 0.917574,-0.263678 2.170552,-0.486495 2.864443,-0.76851 1.274693,-0.518066 2.003942,-1.001558 2.654849,-1.467153 z m -31.439008,2.619917 c 2.487341,0.672766 5.775813,1.137775 10.479669,1.222628 l 0.104797,10.689263 0,0.03493 0,0.733577 c -5.435005,-0.09059 -9.512219,-0.519044 -12.610536,-1.117831 0.106127,-4.776683 0.879334,-8.55791 2.02607,-11.562569 z m 23.264866,0.31439 c 1.073459,3.067541 1.833795,6.821314 1.816476,11.702298 -3.054474,0.423245 -7.062018,0.648559 -11.702298,0.698644 l 0,-0.838373 -0.104796,-10.654331 c 4.082416,-0.0864 7.404468,-0.403886 9.990618,-0.908238 z         M 8.2632205,30.922625 c 0.7558676,0.510548 1.5529563,1.013339 3.0041715,1.57195 0.937518,0.360875 2.612202,0.647642 3.91241,0.978102 0.112814,3.85566 0.703989,7.107756 1.606883,9.920754 -1.147172,-0.324262 -2.644553,-0.640648 -3.423359,-0.978102 -1.516688,-0.657177 -2.386627,-1.287332 -2.864443,-1.71168 -0.477816,-0.424347 -0.489051,-0.489051 -0.489051,-0.489051 L 9.8002387,40.319395 C 8.791691,37.621767 8.1584238,34.769583 8.1584238,31.900727 c 0,-0.330153 0.090589,-0.648169 0.1047967,-0.978102 z m 48.2763445,0.419186 c 0.0047,0.188973 0.06986,0.36991 0.06986,0.558916 0,2.938869 -0.620228,5.873558 -1.676747,8.628261 -0.07435,0.07583 -0.06552,0.07411 -0.454119,0.349323 -0.606965,0.429857 -1.631665,1.042044 -3.318562,1.676747 -1.208528,0.454713 -3.204964,0.850894 -5.135038,1.25756 0.84593,-2.765726 1.41808,-6.005357 1.606883,-9.815957 2.232369,-0.413371 4.483758,-0.840201         5.938479,-1.327425 1.410632,-0.472457 2.153108,-0.89469 2.96924,-1.327425 z m -38.530252,2.864443 c 3.208141,0.56697 7.372279,0.898588 12.575603,0.978103 l 0.174662,9.885821 c -4.392517,-0.06139 -8.106722,-0.320566 -10.863925,-0.803441 -1.051954,-2.664695 -1.692909,-6.043794 -1.88634,-10.060483 z m 26.793022,0.31439 c -0.246298,3.923551 -0.877762,7.263679 -1.816476,9.885822 -2.561957,0.361954 -5.766249,0.560708 -9.431703,0.62878 l -0.174661,-9.815957 c 4.491734,-0.04969 8.334769,-0.293032 11.42284,-0.698645 z M 12.035901,44.860585 c 0.09977,0.04523 0.105535,0.09465 0.209594,0.139729 1.337656,0.579602 3.441099,1.058072 5.589157,1.537018 1.545042,3.399208 3.548524,5.969402 5.589157,7.789888 -3.034411,-1.215537 -5.871615,-3.007978 -8.174142,-5.309699 -1.245911,-1.245475 -2.271794,-2.662961 -3.213766,-4.156936 z m 40.69605,0 c -0.941972,1.493975 -1.967855,2.911461         -3.213765,4.156936 -2.74253,2.741571 -6.244106,4.696717 -9.955686,5.868615 0.261347,-0.241079 0.507495,-0.394491 0.768509,-0.663713 1.674841,-1.727516 3.320792,-4.181056 4.645987,-7.265904 2.962447,-0.503021 5.408965,-1.122293 7.161107,-1.781544 0.284034,-0.106865 0.337297,-0.207323 0.593848,-0.31439 z m -31.404076,2.305527 c 2.645807,0.376448 5.701178,0.649995 9.466635,0.698645 l 0.139729,7.789888 c -1.38739,-0.480844 -3.316218,-1.29837 -5.659022,-3.388427 -1.388822,-1.238993 -2.743668,-3.0113 -3.947342,-5.100106 z m 20.365491,0.104797 c -1.04872,2.041937 -2.174337,3.779068 -3.353494,4.995309 -1.853177,1.911459 -3.425515,2.82679 -4.611055,3.353494 l -0.139729,-7.789887 c 3.13091,-0.05714 5.728238,-0.278725 8.104278,-0.558916 z\">\n        </path>\n      </svg:svg>\n      <!-- <div>三维视图</div> -->\n    </div>\n    <div class=\"mode\" (click)=\"changeViewMode('2d');\">\n      <svg:svg class=\"\" width=\"40\" height=\"40\" viewBox=\"0 0 64 64\">\n        <path\n          d=\"m 2.9825053,17.550598 0,1.368113 0,26.267766 0,1.368113 1.36811,0 54.9981397,0 1.36811,0 0,-1.368113 0,-26.267766 0,-1.368113 -1.36811,0 -54.9981397,0 -1.36811,0 z m 2.73623,2.736226 10.3292497,0 0,10.466063 -10.3292497,0 0,-10.466063 z m 13.0654697,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 11.69737,0 0,10.466063 -11.69737,0 0,-10.466063 z m 14.43359,0 10.32926,0 0,10.466063 -10.32926,0 0,-10.466063 z m -41.9326497,13.202288 10.3292497,0 0,10.329252 -10.3292497,0 0,-10.329252 z m 13.0654697,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 11.69737,0 0,10.329252 -11.69737,0 0,-10.329252 z m 14.43359,0 10.32926,0 0,10.329252 -10.32926,0 0,-10.329252 z\">\n        </path>\n      </svg:svg>\n      <!-- <div>二维视图</div> -->\n    </div>\n    <div class=\"mode\" (click)=\"changeViewMode('columbus');\">\n      <svg:svg class=\"\" width=\"40\" height=\"40\" viewBox=\"0 0 64 64\">\n        <path\n          d=\"m 14.723969,17.675598 -0.340489,0.817175 -11.1680536,26.183638 -0.817175,1.872692 2.076986,0 54.7506996,0 2.07698,0 -0.81717,-1.872692 -11.16805,-26.183638 -0.34049,-0.817175 -0.91933,0 -32.414586,0 -0.919322,0 z m 1.838643,2.723916 6.196908,0 -2.928209,10.418977 -7.729111,0 4.460412,-10.418977 z m 9.02297,0 4.903049,0 0,10.418977 -7.831258,0 2.928209,-10.418977 z m 7.626964,0 5.584031,0 2.62176,10.418977 -8.205791,0 0,-10.418977 z m 8.410081,0 5.51593,0 4.46042,10.418977 -7.38863,0 -2.58772,-10.418977 z m -30.678091,13.142892 8.103649,0 -2.89416,10.282782 -9.6018026,0 4.3923136,-10.282782 z m 10.929711,0 8.614384,0 0,10.282782 -11.508544,0 2.89416,-10.282782 z m 11.338299,0 8.852721,0 2.58772,10.282782 -11.440441,0 0,-10.282782 z m 11.678781,0 7.86531,0 4.39231,10.282782 -9.6699,0 -2.58772,-10.282782 z\">\n        </path>\n      </svg:svg>\n      <!-- <div>哥伦布视图</div> -->\n    </div>\n  </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { ComponentRegister } from 'epsgis';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\n\n@ComponentRegister({\n  uri:\"epsgis-planet-mode-switch\",\n  path:\"epsplanet/components/mode-switch\",\n  name:\"PlanetModeSwitchComponent\"\n})\n@Component({\n  selector: 'epsgis-planet-mode-switch',\n  templateUrl: './mode-switch.component.html',\n  styleUrls: ['./mode-switch.component.scss']\n})\nexport class PlanetModeSwitchComponent extends BasePlanetWidgetComponent {\n  viewType: string = '3d';\n  visible: boolean;\n  constructor() {\n    super();\n  }\n  static getCompInfo() {\n    return { name: \"PlanetModeSwitchComponent\", path: \"epsplanet/components/mode-switch\" };\n  }\n  clickMe(): void {\n    this.visible = false;\n  }\n\n  change(value: boolean): void {\n    console.log(value);\n  }\n\n  changeViewMode(type: string) {\n    if (type == \"2d\") {\n      Promise.resolve().then(() => { this.view.czm.viewer.scene.morphTo2D(1); });\n    } else if (type == \"columbus\") {\n      Promise.resolve().then(() => { this.view.czm.viewer.scene.morphToColumbusView(1); });\n    } else {\n      Promise.resolve().then(() => { this.view.czm.viewer.scene.morphTo3D(1); });\n    }\n    this.viewType = type;\n  }\n}\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { UtilsService,ComponentRegister } from 'epsgis';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\n/**\n * 状态栏，显示经纬度、高度等信息\n */\n\n@ComponentRegister({\n  uri: \"epsgis-planet-status-bar\",\n  path: \"epsplanet/components/status-bar\",\n  name: \"PlanetStatusBarComponent\"\n})\n@Component({\n  selector: 'epsgis-planet-status-bar',\n  template: `<div class=\"status-info\">{{ fpsString }} {{cameraString}} {{ velocityString() }}</div>`,\n  styles: [\n    `.status-info{background-color: #4c555e; color:#fff; font-size: 14px;}`\n  ]\n})\nexport class PlanetStatusBarComponent extends BasePlanetWidgetComponent {\n  _scene: any;\n  _camera: any;\n  fpsString: string = \"\";\n  cameraString: string = \"\";\n  baseVelocity = 0.0;\n  velocity = 0.0;\n  velocityRatio = 1.0;\n  lang: any = {\n    longitude: \"经度\",\n    latitude: \"纬度\",\n    height: \"高度\",\n    fps: \"帧率\",\n    heading: \"偏航角\",\n    pitch: \"俯仰角\",\n    roll: \"翻滚角\",\n    meter: \"米\",\n    velocity: \"键盘运动速度\",\n    createPolylineTip: \"左键添加点，右键删除点，shift+右键创建完成\",\n    editPolylineTip:\n      \"鼠标移动到其中一个点会出现一个操作栏，点击移动按钮，可以移动折线位置；点击增加按钮，可以在该位置增加一个点；点击删除按钮，可以删除该点\",\n    createRectangleTip:\n      \"点击左键确定矩形中心点，移动鼠标确定矩形方向和对角线长度，再次点击左键创建完成\",\n    editRectangleTip: \"左键点击其中一个点移动矩形位置\",\n    createCircleTip:\n      \"点击左键确定圆的圆心，移动鼠标确定圆的半径，再次点击左键创建完成\",\n    editCircleTip: \"左键点击其中一个点移动圆位置\",\n    createDoubleArrowTip: \"在四个不同位置点击左键创建双箭头\",\n    editDoubleArrowTip: \"左键点击其中一个点移动双箭头位置\",\n    createFlattenedPolygonTip:\n      \"左键添加点，右键删除点，shift+右键停止绘制，上下移动鼠标确定高度，再次点击左键创建完成\",\n    editFlattenedPolygonTip:\n      \"鼠标移动到其中一个点会出现一个操作栏，点击移动按钮，可以移动折线位置；点击增加按钮，可以在该位置增加一个点；点击删除按钮，可以删除该点\",\n    movableObjectTip:\n      \"鼠标左键点击坐标轴x,y,z任意一个轴，轴变黄色，可沿着相应位置进行移动，再次点击，轴恢复原色，停止移动，点击右键坐标轴消失\",\n    rotatableObjectTip:\n      \"鼠标左键点击旋转坐标轴任意一个轴，轴变黄色，可沿着相应位置进行旋转，再次点击，轴恢复原色，停止旋转，点击右键旋转坐标轴消失\",\n    positionPickingTip: \"点击鼠标左键拾取位置\"\n  };\n  _disposers: Array<any> = [];\n  _uw1: Function;\n  _uw2: Function;\n  _uw3: Function;\n  _uw4: Function;\n  _uw5: Function;\n  _uw6: Function;\n  _uw7: Function;\n  _uw8: Function;\n  constructor(\n    private cdr: ChangeDetectorRef) { super(); }\n  static getCompInfo() {\n    return { name: \"PlanetStatusBarComponent\", path: \"epsplanet/components/status-bar\" };\n  }\n\n  ngOnInit() {\n    this._scene = this.view.czm.scene;\n    this._camera = this.view.czm.camera;\n    const td = Cesium.Math.toDegrees;\n    const updateCameraString = () => {\n      const camera = this._camera;\n\n      var l = td(camera.positionCartographic.longitude).toFixed(5);\n      var b = td(camera.positionCartographic.latitude).toFixed(5);\n      var h = camera.positionCartographic.height.toFixed(2);\n      var y = td(camera.heading).toFixed(2);\n      var p = td(camera.pitch).toFixed(2);\n      var r = td(camera.roll).toFixed(2);\n\n      this.cameraString = `${this.lang.longitude}: ${l}° ${this.lang.latitude}: ${b}° ${this.lang.height}: ${h}${this.lang.meter} ${this.lang.heading}: ${y}° ${this.lang.pitch}: ${p}° ${this.lang.roll}: ${r}°`;\n      UtilsService.detectChanges(this.cdr);\n    };\n\n    this._disposers = [];\n    this._disposers.push(\n      this._camera.changed.addEventListener(updateCameraString)\n    );\n    updateCameraString();\n    // 帧率的计算借助了Cesium中的东西，需要开启debugShowFramesPerSecond\n    this._scene.debugShowFramesPerSecond = true;\n    const tempDisposer = this._scene._postRender.addEventListener(() => {\n      tempDisposer();\n      this._scene._performanceContainer.style.visibility = \"hidden\"; // 隐藏默认的帧率显示窗口\n    });\n\n    this._disposers.push(\n      this._scene._postRender.addEventListener(() => {\n        if (this._scene._performanceDisplay) {\n          this.fpsString = `${this.lang.fps}: ${this._scene._performanceDisplay._fpsText.nodeValue} `;\n        } else {\n          this.fpsString = \"\";\n        }\n      })\n    );\n    this._disposers.push(\n      XE.MVVM.track(\n        this,\n        \"baseVelocity\",\n        this.view.camera.immersion,\n        \"baseVelocity\"\n      )\n    );\n    this._disposers.push(\n      XE.MVVM.track(\n        this,\n        \"velocity\",\n        this.view.camera.immersion,\n        \"velocity\"\n      )\n    );\n    this._disposers.push(\n      XE.MVVM.bind(\n        this,\n        \"velocityRatio\",\n        this.view.camera.immersion,\n        \"velocityRatio\"\n      )\n    );\n\n    if (this._uw1) {\n      this._uw1 = this._uw1();\n    } else {\n      this._uw1 = XE.MVVM.watch(\n        () => this.view.interaction.creatingPolylineBinding.target,\n        () => {\n          if (\n            this.view.interaction.creatingPolylineBinding.target !==\n            undefined\n          ) {\n            if (\n              this.view.interaction.creatingPolylineBinding.target\n                .xbsjType === \"GeoRectangle\"\n            ) {\n              // this.$root.$earthUI.promptInfo(this.lang.createRectangleTip);\n            } else if (\n              this.view.interaction.creatingPolylineBinding.target\n                .xbsjType === \"GeoCircle\"\n            ) {\n              // this.$root.$earthUI.promptInfo(this.lang.createCircleTip);\n            } else if (\n              this.view.interaction.creatingPolylineBinding.target\n                .xbsjType === \"GeoDoubleArrow\"\n            ) {\n              // this.$root.$earthUI.promptInfo(this.lang.createDoubleArrowTip);\n            } else {\n              // this.$root.$earthUI.promptInfo(this.lang.createPolylineTip);\n            }\n          }\n        }\n      );\n    }\n    if (this._uw2) {\n      this._uw2 = this._uw2();\n    } else {\n      this._uw2 = XE.MVVM.watch(\n        () => this.view.interaction.editingPolylineBinding.target,\n        () => {\n          if (\n            this.view.interaction.editingPolylineBinding.target !==\n            undefined\n          ) {\n            if (\n              this.view.interaction.editingPolylineBinding.target\n                .xbsjType === \"GeoRectangle\"\n            ) {\n              //this.$root.$earthUI.promptInfo(this.lang.editRectangleTip);\n            } else if (\n              this.view.interaction.editingPolylineBinding.target\n                .xbsjType === \"GeoCircle\"\n            ) {\n              // this.$root.$earthUI.promptInfo(this.lang.editCircleTip);\n            } else if (\n              this.view.interaction.editingPolylineBinding.target\n                .xbsjType === \"GeoDoubleArrow\"\n            ) {\n              // this.$root.$earthUI.promptInfo(this.lang.editDoubleArrowTip);\n            } else {\n              // this.$root.$earthUI.promptInfo(this.lang.editPolylineTip);\n            }\n          }\n        }\n      );\n    }\n    if (this._uw3) {\n      this._uw3 = this._uw3();\n    } else {\n      this._uw3 = XE.MVVM.watch(\n        () => this.view.interaction.creatingPolygonBinding.target,\n        () => {\n          if (\n            this.view.interaction.creatingPolygonBinding.target !==\n            undefined\n          ) {\n            // this.$root.$earthUI.promptInfo(this.lang.createPolygonTip);\n          }\n        }\n      );\n    }\n    if (this._uw4) {\n      this._uw4 = this._uw4();\n    } else {\n      this._uw4 = XE.MVVM.watch(\n        () =>\n          this.view.interaction.flattenedPolygonCreatingBinding.target,\n        () => {\n          if (\n            this.view.interaction.flattenedPolygonCreatingBinding\n              .target !== undefined\n          ) {\n            // this.$root.$earthUI.promptInfo(this.lang.createFlattenedPolygonTip);\n          }\n        }\n      );\n    }\n    if (this._uw5) {\n      this._uw5 = this._uw5();\n    } else {\n      this._uw5 = XE.MVVM.watch(\n        () => this.view.interaction.editingPolygonBinding.target,\n        () => {\n          if (\n            this.view.interaction.editingPolygonBinding.target !==\n            undefined\n          ) {\n            //this.$root.$earthUI.promptInfo(this.lang.editFlattenedPolygonTip);\n          }\n        }\n      );\n    }\n    if (this._uw6) {\n      this._uw6 = this._uw4();\n    } else {\n      this._uw6 = XE.MVVM.watch(\n        () => this.view.interaction.movableObjectBinding.target,\n        () => {\n          if (\n            this.view.interaction.movableObjectBinding.target !==\n            undefined\n          ) {\n            // this.$root.$earthUI.promptInfo(this.lang.movableObjectTip);\n          }\n        }\n      );\n    }\n    if (this._uw7) {\n      this._uw7 = this._uw4();\n    } else {\n      this._uw7 = XE.MVVM.watch(\n        () => this.view.interaction.rotatableObjectBinding.target,\n        () => {\n          if (\n            this.view.interaction.rotatableObjectBinding.target !==\n            undefined\n          ) {\n            //this.$root.$earthUI.promptInfo(this.lang.rotatableObjectTip);\n          }\n        }\n      );\n    }\n    if (this._uw8) {\n      this._uw8 = this._uw4();\n    } else {\n      this._uw8 = XE.MVVM.watch(\n        () => this.view.interaction.positionPickingBinding.target,\n        () => {\n          if (\n            this.view.interaction.positionPickingBinding.target !==\n            undefined\n          ) {\n            //this.$root.$earthUI.promptInfo(this.lang.positionPickingTip);\n          }\n        }\n      );\n    }\n\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._disposers.forEach(d => d());\n    this._disposers.length = 0;\n    this._uw1 = this._uw1 && this._uw1();\n    this._uw2 = this._uw2 && this._uw2();\n    this._uw3 = this._uw3 && this._uw3();\n    this._uw4 = this._uw4 && this._uw4();\n    this._uw5 = this._uw5 && this._uw5();\n    this._uw6 = this._uw6 && this._uw6();\n    this._uw7 = this._uw7 && this._uw7();\n    this._uw8 = this._uw8 && this._uw8();\n  }\n  velocityString() {\n    return ` ${this.lang.velocity}: ${this.velocity.toFixed(\n      1\n    )} km/h (${this.baseVelocity.toFixed(1)} × ${this.velocityRatio.toFixed(\n      1\n    )})`;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ComponentRegister } from 'epsgis';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\n\n@ComponentRegister({\n  uri: \"epsgis-planet-zoom\",\n  path: \"epsplanet/components/zoom\",\n  name: \"PlanetZoomComponent\"\n})\n@Component({\n  selector: 'epsgis-planet-zoom',\n  templateUrl: './zoom.component.html',\n  styleUrls: ['./zoom.component.scss'],\n})\nexport class PlanetZoomComponent extends BasePlanetWidgetComponent {\n\n  constructor() {\n    super();\n  }\n  static getCompInfo() {\n    return { name: \"PlanetZoomComponent\", path: \"epsplanet/components/zoom\" };\n  }\n  ngOnInit() {\n   \n  }\n  ngAfterViewInit(){\n     document.getElementsByClassName(\"jimu-widget-onscreen-icon zoomOut\")[0]['style'].top = document.getElementsByClassName(\"jimu-widget-onscreen-icon zoomIn\")[0]['offsetHeight'] + \"px\"\n  }\n  zoomIn() {\n    const viewer = this.view.czm.viewer;\n    this.getCesiumView().camera.zoomIn(viewer.camera.positionCartographic.height / Math.abs(Math.sin(viewer.camera.pitch)) * 0.2);\n  }\n  zoomOut() {\n    const viewer = this.view.czm.viewer;\n    viewer.camera.zoomOut(viewer.camera.positionCartographic.height / Math.abs(Math.sin(viewer.camera.pitch)) * 0.2);\n  }\n}\n","<div class=\"jimu-widget-onscreen-icon zoomIn\" (click)=\"zoomIn();\" title=\"放大\">\n  <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\n</div>\n<div class=\"jimu-widget-onscreen-icon zoomOut\" (click)=\"zoomOut();\" title=\"缩小\" style=\"\">\n  <i nz-icon nzType=\"minus\" nzTheme=\"outline\"></i>\n</div>","<nz-tabset>\r\n    <nz-tab nzTitle=\"影像\">\r\n        <ul>\r\n            <li *ngFor=\"let item of this.config.basemaps\" (click)=\"selectImage(item)\">\r\n                <div class=\"backimg\">\r\n                    <img [src]=\"item.imgUrl\"><br>\r\n                    <span [title]=\"item.title\"\r\n                        style=\"width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align: left;\">{{item.title}}</span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </nz-tab>\r\n    <!-- <nz-tab nzTitle=\"地形\">\r\n          <ul>\r\n            <li *ngFor=\"let item of terrainData\" (click)=\"selectTerrain(item)\">\r\n                <div class=\"backimg\">\r\n                    <img [src]=\"item.czmObject.img\"><br>\r\n                    <span [title]=\"item.czmObject.name\"\r\n                        style=\"width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align: left;\">{{item.czmObject.name}}</span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </nz-tab> -->\r\n</nz-tabset>\r\n<nz-tabset>\r\n    <!-- <nz-tab nzTitle=\"影像\">\r\n        <ul>\r\n            <li *ngFor=\"let item of this.config.basemaps\" (click)=\"selectImage(item)\">\r\n                <div class=\"backimg\">\r\n                    <img [src]=\"item.imgUrl\"><br>\r\n                    <span [title]=\"item.title\"\r\n                        style=\"width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align: left;\">{{item.title}}</span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </nz-tab> -->\r\n    <nz-tab nzTitle=\"地形\">\r\n          <ul>\r\n            <li *ngFor=\"let item of this.config.terrain\" (click)=\"selectTerrain(item)\">\r\n                <div class=\"backimg\">\r\n                    <img [src]=\"item.imgUrl\"><br>\r\n                    <span [title]=\"item.czmObject.name\"\r\n                        style=\"width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align: left;\">{{item.czmObject.name}}</span>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </nz-tab>\r\n</nz-tabset>\r\n<nz-divider></nz-divider>\r\n<nz-tree \r\n  nzBlockNode\r\n  nzCheckable\r\n  [nzData]=\"layerNodes\" \r\n  (nzClick)=\"activeNode($event)\" \r\n  (nzCheckBoxChange)=\"onCheckedChange($event);\"\r\n  [nzTreeTemplate]=\"nzTreeTemplate\"></nz-tree>\r\n<ng-template #nzTreeTemplate let-node let-origin=\"origin\">\r\n  <span class=\"custom-node\">\r\n    <span *ngIf=\"!node.isLeaf\">\r\n      <!-- <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\" (click)=\"openFolder(node)\"></i> -->\r\n      <span class=\"folder-name\">{{ node.title }}</span>\r\n    </span>\r\n    <span *ngIf=\"node.isLeaf\">\r\n      <!-- <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\" (click)=\"openFolder(node)\"></i> -->\r\n      <span class=\"folder-name\">{{ node.title }}</span>\r\n    </span>\r\n  </span>\r\n</ng-template>","import { Component } from \"@angular/core\";\nimport { ComponentRegister } from 'epsgis';\nimport { NzContextMenuService, NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\nimport { NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/tree';\nimport { SceneTreeUtils } from '../../utils/sceneTree-utils';\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\n\n@ComponentRegister({\n  uri: \"epsgis-planet-basemap-gallery\",\n  path: \"epsplanet/components/basemap-gallery\",\n  name: \"PlanetBasemapGalleryComponent\"\n})\n@Component({\n  selector: \"epsgis-planet-basemap-gallery\",\n  templateUrl: \"./basemap-gallery.component.html\",\n  styleUrls: [\"./basemap-gallery.component.scss\"]\n})\nexport class PlanetBasemapGalleryComponent extends BasePlanetWidgetComponent {\n  activatedNode?: NzTreeNode;\n  layerNodes: any = [];\n  basemap: any;\n  terrainData = [{\n    \"czmObject\": {\n      \"img\": \"https://lab2.cesiumlab.com/upload/3fd1ac60-2683-4ae8-a5da-c0250edc836b/2019_08_02_19_45_38.jpg\",\n      \"xbsjType\": \"Terrain\",\n      \"xbsjGuid\": \"0b34ebd4-5a5b-4f1d-b2e8-a41797193aa8\",\n      \"name\": \"中国14级（测试）\",\n      \"xbsjTerrainProvider\": {\n        \"type\": \"XbsjCesiumTerrainProvider\",\n        \"XbsjEllipsoidTerrainProvider\": {},\n        \"XbsjCesiumTerrainProvider\": {\n          \"url\": \"https://lab.earthsdk.com/terrain/577fd5b0ac1f11e99dbd8fd044883638\",\n          \"requestVertexNormals\": true,\n          \"requestWaterMask\": true\n        },\n        \"GoogleEarthEnterpriseTerrainProvider\": {}\n      }\n    }\n  }];\n  terrainIcon = \"https://lab2.cesiumlab.com/upload/3fd1ac60-2683-4ae8-a5da-c0250edc836b/2019_08_02_19_45_38.jpg\";\n  constructor(private nzContextMenuService: NzContextMenuService) {\n    super();\n  }\n  activeNode(data: NzFormatEmitEvent): void {\n    this.activatedNode = data.node!;\n  }\n  contextMenu($event: MouseEvent, menu: NzDropdownMenuComponent): void {\n    this.nzContextMenuService.create($event, menu);\n  }\n  /**\n  * 选中状态改变\n  */\n  onCheckedChange(evt: NzFormatEmitEvent): void {\n    // SceneTreeUtils.GetXbsjCzmObject(evt.node).show = false\n    if (evt.eventName !== \"check\" || !evt.node) {\n      return;\n    }\n    if (evt.node.isChecked) {\n      //加载图层\n      // evt.node.origin.origin.show=true\n      SceneTreeUtils.GetXbsjCzmObject(evt.node).show = true;\n    } else {\n      //移除图层\n      SceneTreeUtils.GetXbsjCzmObject(evt.node).show = false;\n    }\n  }\n  onRightClick($event) {\n\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    var uw3 = XE.MVVM.watch(() => [...this.view.sceneTree.$refs.basemap.children], () => {\n      // console.log(\"底图变化\")\n      this.loadBaseTree();\n    });\n  }\n  loadBaseTree() {\n    setTimeout(() => {\n      const _layerNodes = SceneTreeUtils.SceneTree2NgZorroTree(this.view.sceneTree.$refs.basemap);\n      // console.log(_layerNodes)\n      this.layerNodes = [..._layerNodes[0][\"_children\"]];\n      this.view.sceneTree.$refs.basemap.children[0].czmObject.xbsjZIndex=-1\n    }, 100);\n\n  }\n  selectImage(item) {\n    console.log(SceneTreeUtils.loadLayerNode(item))\n    let node=SceneTreeUtils.loadLayerNode(item)\n    node.czmObject.show=true;\n    const earth = this.view;\n    // earth.sceneTree.root.children[0] = {};\n    earth.sceneTree.$refs.basemap.children[0] = node;\n  }\n  selectTerrain(item) {\n    this.view.sceneTree.$refs.basemap.children.push(item)\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}","import { Injectable } from '@angular/core'\r\nimport { HttpReqService } from 'epsgis'\r\n\r\nimport turf from 'turf'\r\nlet propertyLists = []\r\nlet czmObjectList = []\r\nlet resList = []\r\nlet highLight = null\r\n\r\n// earth.epsplanet.allowClick = false;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Identify {\r\n    earth;\r\n    constructor(private http: HttpReqService) {\r\n        // debugger\r\n        // earth.epsplanet.allowClick = false\r\n        this.earth = window['earth']\r\n        this.earth.interaction.picking.enabled = false\r\n        this.earth.interaction.picking.hoverEnable = false\r\n        this.earth.epsplanet = {}\r\n        this.earth.epsplanet.allowClick = false;\r\n    }\r\n    httpReq(method, url) {\r\n        if (method == 'post') {\r\n            return this.http.httpClient.post(url, \"\").toPromise()\r\n        }\r\n        if (method == 'get') {\r\n            return this.http.httpClient.get(url).toPromise()\r\n        }\r\n    }\r\n    /**\r\n     * geoserver服务获取点选位置要素属性\r\n     * @param czmObject \r\n     * @param earth 创建的地球\r\n     * @param type 识别类型：点、线、面(目前只有点)\r\n     * @param callback 回调函数\r\n     */\r\n    GetFeatureInfo(czmObject, earth, type, callback) {\r\n        if (highLight == null) {\r\n            highLight = new Cesium.CustomDataSource('highLight');\r\n            earth.czm.viewer.dataSources.add(highLight);\r\n        }\r\n        let scene = earth.czm.scene;\r\n        let viewer = earth.czm.viewer;\r\n        let WFSUrl = this.GetWFSUrl(czmObject.xbsjImageryProvider);\r\n        let handler = new Cesium.ScreenSpaceEventHandler(scene.canvas);\r\n        let filter = \"\"\r\n\r\n        handler.setInputAction((click) => {\r\n            if (!earth.epsplanet.allowClick) return;\r\n            if (!czmObject.show) return;\r\n            let pickObj = earth.czm.viewer.scene.pick(click.position)\r\n            if (Cesium.defined(pickObj)) {\r\n                return\r\n            }\r\n            earth.sceneTree.$refs.pin1.czmObject.customProp = false;\r\n            highLight.entities.removeAll();\r\n            resList = [];\r\n            earth.sceneTree.$refs.pin1.czmObject.position = this.Cartesian2ToCartographic(viewer, click.position)\r\n            let position = this.Cartesian2ToWGS84(viewer, click.position);\r\n            let bufferCoordinates = this.Buffer([position.lon, position.lat], 100);\r\n            if (type == 'point') {\r\n                filter = `<Filter xmlns=\"http://www.opengis.net/ogc\" xmlns:gml=\"http://www.opengis.net/gml\"><Intersects><PropertyName>the_geom</PropertyName><gml:outerBoundaryIs><gml:LinearRing><gml:coordinates>${bufferCoordinates}</gml:coordinates></gml:LinearRing></gml:outerBoundaryIs></Intersects></Filter>`\r\n            } else if (type = 'line') {\r\n\r\n            } else if (type = 'polygon') {\r\n\r\n            }\r\n            this.httpReq('post', WFSUrl + filter).then((res: any) => {\r\n                if (res.features.length > 0) {\r\n                    let properties = res.features[0].properties;\r\n                    let propertyList = [];\r\n                    Object.keys(properties).map(key =>\r\n                        propertyList.push({\r\n                            name: key,\r\n                            value: properties[key]\r\n                        })\r\n                    );\r\n                    propertyLists.push(propertyList)\r\n                    czmObjectList.push(czmObject)\r\n                    resList.push(res)\r\n                    setTimeout(() => {\r\n                        //如果有图层重叠，只第一个图层返回属性\r\n                        if (resList.length > 1) {\r\n                            // debugger;\r\n                            if (czmObjectList[0]._ci > czmObjectList[1]._ci) {\r\n                                if (czmObjectList[0]._ci !== czmObject._ci) return;\r\n                                if (typeof callback === 'function') {\r\n                                    callback(propertyLists[0]);\r\n                                    Cesium.GeoJsonDataSource.load(resList[0])\r\n                                        .then(dataSource => {\r\n                                            dataSource.entities.values.forEach(entity => {\r\n                                                highLight.entities.add(entity)\r\n                                            })\r\n                                        })\r\n                                }\r\n                            } else {\r\n                                if (czmObjectList[1]._ci !== czmObject._ci) return;\r\n                                if (typeof callback === 'function') {\r\n                                    callback(propertyLists[1]);\r\n                                    Cesium.GeoJsonDataSource.load(resList[1])\r\n                                        .then(dataSource => {\r\n                                            dataSource.entities.values.forEach(entity => {\r\n                                                highLight.entities.add(entity)\r\n                                            })\r\n                                        })\r\n                                }\r\n                            }\r\n                            return\r\n                        } else {\r\n                            if (typeof callback === 'function') {\r\n                                callback(propertyList);\r\n                                Cesium.GeoJsonDataSource.load(res)\r\n                                    .then(dataSource => {\r\n                                        dataSource.entities.values.forEach(entity => {\r\n                                            highLight.entities.add(entity)\r\n                                        })\r\n                                    })\r\n                            }\r\n                        }\r\n                    }, 100);\r\n                    setTimeout(() => {\r\n                        resList = []\r\n                        propertyLists = []\r\n                        czmObjectList = []\r\n                    }, 1000);\r\n\r\n                }\r\n            }).catch(err => { })\r\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n    }\r\n    InitHandler() {\r\n\r\n    }\r\n    //arcgis\r\n    getLayers(czmObject, earth, callback) {\r\n        if (highLight == null) {\r\n            highLight = new Cesium.CustomDataSource('highLight');\r\n            earth.czm.viewer.dataSources.add(highLight);\r\n        }\r\n        let handler = new Cesium.ScreenSpaceEventHandler(earth.czm.scene.canvas);\r\n        let url = czmObject.xbsjImageryProvider.WebMapTileServiceImageryProvider.url || czmObject.xbsjImageryProvider.WebMapServiceImageryProvider.url;\r\n        let requestUrl = \"\"\r\n        if (czmObject.xbsjImageryProvider.type == \"WebMapTileServiceImageryProvider\") {\r\n            requestUrl = url.split('MapServer')[0] + \"MapServer/layers?f=pjson\"\r\n        } else if (czmObject.xbsjImageryProvider.type == \"WebMapServiceImageryProvider\") {\r\n            requestUrl = url.split('arcgis')[0] + 'arcgis/rest' + url.split('arcgis')[1].split('MapServer')[0] + \"MapServer/layers?f=pjson\";\r\n        }\r\n        // let layers=[];\r\n        this.httpReq('get', requestUrl).then((res: any) => {\r\n            // debugger\r\n            // console.log(res)\r\n            handler.setInputAction((click) => {\r\n                if (res.layers == undefined) return;\r\n                if (!earth.epsplanet.allowClick) return;\r\n                if (!czmObject.show) return;\r\n                let pickObj = earth.czm.viewer.scene.pick(click.position)\r\n                if (Cesium.defined(pickObj)) {\r\n                    return\r\n                }\r\n                if (highLight)\r\n                    highLight.entities.removeAll();\r\n                earth.sceneTree.$refs.pin1.czmObject.customProp = false;\r\n                earth.sceneTree.$refs.pin1.czmObject.position = this.Cartesian2ToCartographic(earth.czm.viewer, click.position)\r\n\r\n                let position = this.Cartesian2ToWGS84(earth.czm.viewer, click.position);\r\n                let bufferCoordinates = this.Buffer([position.lon, position.lat], 1);\r\n                let addr = this.GetWFSUrl(czmObject.xbsjImageryProvider);\r\n                let typeName = url.split('/MapServer')[0].split('services/')[1];\r\n                let resList = []\r\n                let geometryList = []\r\n\r\n                if (czmObject.xbsjImageryProvider.type == \"WebMapTileServiceImageryProvider\") {\r\n                    for (let i = 0; i < res.layers.length; i++) {\r\n                        const item = res.layers[i];\r\n                        let query = `${addr}`\r\n                            + `typename=${typeName}:${item.name}&Filter=`\r\n                            + `<ogc:Filter><ogc:Intersects><ogc:PropertyName>Shape</ogc:PropertyName>`\r\n                            + `<gml:Polygon srsName=\"urn:x-ogc:def:crs:EPSG:4326\"><gml:outerBoundaryIs><gml:LinearRing>`\r\n                            + `<gml:coordinates>${bufferCoordinates}</gml:coordinates>`\r\n                            + `</gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></ogc:Intersects></ogc:Filter>`\r\n                        this.httpReq('get', query).then().catch((err: any) => {\r\n                            let res = err.error.text\r\n                            // debugger\r\n                            if (this.xml2Json(this.stringToXml(res))['FeatureCollection']['featureMember']) {\r\n                                let properties = this.xml2Json(this.stringToXml(res))['FeatureCollection']['featureMember'][item.name]\r\n                                let propertyList = []\r\n                                let geojson = {}\r\n                                // debugger\r\n                                if (properties == undefined || properties == null) return;\r\n                                Object.keys(properties).map(key => {\r\n                                    if (key !== \"Shape\") {\r\n                                        propertyList.push({\r\n                                            name: key,\r\n                                            value: properties[key].value\r\n                                        })\r\n                                    } else {\r\n                                        if (properties[key].MultiSurface) {\r\n                                            let posList = properties[key].MultiSurface.surfaceMember.Polygon.exterior.LinearRing.posList.value.split(\" \");\r\n                                            posList.shift();\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson = {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].Point) {\r\n                                            let posList = properties[key].Point.pos.value.split(\" \");\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"Point\",\r\n                                                    coordinates: posList\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].MultiCurve) {\r\n                                            let posList = properties[key].MultiCurve.curveMember.LineString.posList.value.split(\" \");\r\n\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                resList.push(propertyList)\r\n                                geometryList.push(geojson)\r\n                            }\r\n                        })\r\n                    }\r\n                } else if (czmObject.xbsjImageryProvider.type == \"WebMapServiceImageryProvider\") {\r\n                    let llist = czmObject.xbsjImageryProvider.WebMapServiceImageryProvider.layers.split(\",\")\r\n                    for (let i = 0; i < llist.length; i++) {\r\n                        const item = res.layers[res.layers.length - 1 - llist[i]];\r\n\r\n                        let query = `${addr}`\r\n                            + `typename=${typeName}:${item.name}&Filter=`\r\n                            + `<ogc:Filter><ogc:Intersects><ogc:PropertyName>Shape</ogc:PropertyName>`\r\n                            + `<gml:Polygon srsName=\"urn:x-ogc:def:crs:EPSG:4326\"><gml:outerBoundaryIs><gml:LinearRing>`\r\n                            + `<gml:coordinates>${bufferCoordinates}</gml:coordinates>`\r\n                            + `</gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></ogc:Intersects></ogc:Filter>`\r\n                        // console.log(item.name, query)\r\n                        this.httpReq('get', query).then().catch((err: any) => {\r\n                            let res = err.error.text\r\n                            if (this.xml2Json(this.stringToXml(res))['FeatureCollection'] == undefined) return\r\n                            // debugger\r\n                            if (this.xml2Json(this.stringToXml(res))['FeatureCollection']['featureMember']) {\r\n                                // console.log(this.xml2Json(this.stringToXml(res)))\r\n                                let properties = this.xml2Json(this.stringToXml(res))['FeatureCollection']['featureMember'][item.name]\r\n                                let propertyList = []\r\n                                let geojson = {}\r\n                                // debugger\r\n                                if (properties == undefined || properties == null) return;\r\n                                Object.keys(properties).map(key => {\r\n                                    if (key !== \"Shape\") {\r\n                                        propertyList.push({\r\n                                            name: key,\r\n                                            value: properties[key].value\r\n                                        })\r\n                                    } else {\r\n                                        if (properties[key].MultiSurface) {\r\n                                            let posList = properties[key].MultiSurface.surfaceMember.Polygon.exterior.LinearRing.posList.value.split(\" \");\r\n                                            posList.shift();\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson = {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].Point) {\r\n                                            let posList = properties[key].Point.pos.value.split(\" \");\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"Point\",\r\n                                                    coordinates: posList\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].MultiCurve) {\r\n                                            let posList = properties[key].MultiCurve.curveMember.LineString.posList.value.split(\" \");\r\n\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                resList.push(propertyList)\r\n                                geometryList.push(geojson)\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n\r\n                    if (resList.length > 0 && geometryList.length > 0) {\r\n                        // console.log(geometryList, highLight)\r\n                        if (geometryList[0].geometry.type == \"Point\") {\r\n                            Cesium.GeoJsonDataSource.load(geometryList[0]).then(dataSource => {\r\n                                dataSource.entities.values.forEach(entity => {\r\n                                    entity.billboard = null;\r\n                                    entity.point = new Cesium.PointGraphics({\r\n                                        show: true,\r\n                                        color: Cesium.Color.AQUA,\r\n                                        pixelSize: 10,\r\n                                        clampToGround: true\r\n                                    })\r\n                                    highLight.entities.add(entity)\r\n                                })\r\n                            })\r\n                        } else if (geometryList[0].geometry.type == \"LineString\") {\r\n                            Cesium.GeoJsonDataSource.load(geometryList[0]).then(dataSource => {\r\n                                dataSource.entities.values.forEach(entity => {\r\n                                    entity.polyline.width = 10\r\n                                    entity.polyline.clampToGround = true\r\n                                    entity.polyline.material = new Cesium.PolylineGlowMaterialProperty({\r\n                                        glowPower: 0.2,\r\n                                        color: Cesium.Color.BLUE\r\n                                    });\r\n                                    highLight.entities.add(entity)\r\n                                })\r\n                            })\r\n                        }\r\n                        else {\r\n                            Cesium.GeoJsonDataSource.load(geometryList[0]).then(dataSource => {\r\n                                dataSource.entities.values.forEach(entity => {\r\n                                    highLight.entities.add(entity)\r\n                                })\r\n                            })\r\n                        }\r\n                        callback(resList[0])\r\n                    }\r\n                }, 500);\r\n            }, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n        })\r\n    }\r\n    test(list, earth, callback) {\r\n        list.sort(function sortNumber(a, b) {\r\n            return b._ci - a._ci\r\n        })\r\n        // console.log(list)\r\n        if (highLight == null) {\r\n            highLight = new Cesium.CustomDataSource('highLight');\r\n            earth.czm.viewer.dataSources.add(highLight);\r\n        }\r\n        let handler = new Cesium.ScreenSpaceEventHandler(earth.czm.scene.canvas);\r\n        handler.setInputAction((click) => {\r\n            list.forEach((czmObject, i) => {\r\n                if (!earth.epsplanet.allowClick) return;\r\n                if (!czmObject.show) return;\r\n                let pickObj = earth.czm.viewer.scene.pick(click.position)\r\n                if (Cesium.defined(pickObj)) {\r\n                    return\r\n                }\r\n                // console.log(\"看看循环了几次\")\r\n                if (highLight)\r\n                    highLight.entities.removeAll();\r\n                earth.sceneTree.$refs.pin1.czmObject.customProp = false;\r\n                earth.sceneTree.$refs.pin1.czmObject.position = this.Cartesian2ToCartographic(earth.czm.viewer, click.position)\r\n                let url = czmObject.xbsjImageryProvider.WebMapTileServiceImageryProvider.url || czmObject.xbsjImageryProvider.WebMapServiceImageryProvider.url;\r\n                let requestUrl = \"\"\r\n                if (czmObject.xbsjImageryProvider.type == \"WebMapTileServiceImageryProvider\") {\r\n                    requestUrl = url.split('MapServer')[0] + \"MapServer/layers?f=pjson\"\r\n                } else if (czmObject.xbsjImageryProvider.type == \"WebMapServiceImageryProvider\") {\r\n                    requestUrl = url.split('arcgis')[0] + 'arcgis/rest' + url.split('arcgis')[1].split('MapServer')[0] + \"MapServer/layers?f=pjson\";\r\n                }\r\n                // let layers=[];\r\n                let position = this.Cartesian2ToWGS84(earth.czm.viewer, click.position);\r\n                let bufferCoordinates = this.Buffer([position.lon, position.lat], 1);\r\n                let addr = this.GetWFSUrl(czmObject.xbsjImageryProvider);\r\n                let typeName = url.split('/MapServer')[0].split('services/')[1];\r\n\r\n                this.httpFuncA(czmObject, typeName, bufferCoordinates, addr, requestUrl, (resList, geometryList) => {\r\n                    if (highLight.entities.values && highLight.entities.values.length > 0)\r\n                        return\r\n                    if (resList.length > 0 && geometryList.length > 0) {\r\n                        if (geometryList[0].geometry.type == \"Point\") {\r\n                            Cesium.GeoJsonDataSource.load(geometryList[0]).then(dataSource => {\r\n                                dataSource.entities.values.forEach(entity => {\r\n                                    entity.billboard = null;\r\n                                    entity.point = new Cesium.PointGraphics({\r\n                                        show: true,\r\n                                        color: Cesium.Color.AQUA,\r\n                                        pixelSize: 10,\r\n                                        clampToGround: true\r\n                                    })\r\n                                    highLight.entities.add(entity)\r\n                                })\r\n                            })\r\n                        } else if (geometryList[0].geometry.type == \"LineString\") {\r\n                            Cesium.GeoJsonDataSource.load(geometryList[0]).then(dataSource => {\r\n                                dataSource.entities.values.forEach(entity => {\r\n                                    entity.polyline.width = 10\r\n                                    entity.polyline.clampToGround = true\r\n                                    entity.polyline.material = new Cesium.PolylineGlowMaterialProperty({\r\n                                        glowPower: 0.2,\r\n                                        color: Cesium.Color.BLUE\r\n                                    });\r\n                                    highLight.entities.add(entity)\r\n                                })\r\n                            })\r\n                        } else {\r\n                            Cesium.GeoJsonDataSource.load(geometryList[0]).then(dataSource => {\r\n                                dataSource.entities.values.forEach(entity => {\r\n                                    highLight.entities.add(entity)\r\n                                })\r\n                            })\r\n                        }\r\n                        callback(resList[0])\r\n                    }\r\n                })\r\n            })\r\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n    }\r\n    httpFuncA(czmObject, typeName, bufferCoordinates, addr, requestUrl, callback) {\r\n        let resLists = []\r\n        let geometryLists = []\r\n        this.httpFuncB(requestUrl, res => {\r\n            if (res.layers == undefined) return;\r\n            if (czmObject.xbsjImageryProvider.type == \"WebMapTileServiceImageryProvider\") {\r\n                for (let i = 0; i < res.layers.length; i++) {\r\n                    const item = res.layers[i];\r\n                    let query = `${addr}`\r\n                        + `typename=${typeName}:${item.name}&Filter=`\r\n                        + `<ogc:Filter><ogc:Intersects><ogc:PropertyName>Shape</ogc:PropertyName>`\r\n                        + `<gml:Polygon srsName=\"urn:x-ogc:def:crs:EPSG:4326\"><gml:outerBoundaryIs><gml:LinearRing>`\r\n                        + `<gml:coordinates>${bufferCoordinates}</gml:coordinates>`\r\n                        + `</gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></ogc:Intersects></ogc:Filter>`\r\n                    this.httpFunc(query, err => {\r\n                        let res = err.error.text\r\n                        // debugger\r\n                        let FeatureCollection = this.xml2Json(this.stringToXml(res))['FeatureCollection'];\r\n                        if (FeatureCollection == undefined) return\r\n                        if (FeatureCollection['featureMember']) {\r\n                            if (FeatureCollection['featureMember'].length) {\r\n                                let properties = FeatureCollection['featureMember'][0][item.name]\r\n                                let propertyList = []\r\n                                let geojson = {}\r\n                                // debugger\r\n                                if (properties == undefined || properties == null) return;\r\n                                Object.keys(properties).map(key => {\r\n                                    if (key !== \"Shape\") {\r\n                                        propertyList.push({\r\n                                            name: key,\r\n                                            value: properties[key].value\r\n                                        })\r\n                                    } else {\r\n                                        if (properties[key].MultiSurface) {\r\n                                            let posList = properties[key].MultiSurface.surfaceMember.Polygon.exterior.LinearRing.posList.value.split(\" \");\r\n                                            posList.shift();\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson = {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].Point) {\r\n                                            let posList = properties[key].Point.pos.value.split(\" \");\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"Point\",\r\n                                                    coordinates: posList\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].MultiCurve) {\r\n                                            let posList = properties[key].MultiCurve.curveMember.LineString.posList.value.split(\" \");\r\n\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                resLists.push(propertyList)\r\n                                geometryLists.push(geojson)\r\n                                callback(resLists, geometryLists)\r\n                            } else {\r\n                                let properties = FeatureCollection['featureMember'][item.name]\r\n                                let propertyList = []\r\n                                let geojson = {}\r\n                                // debugger\r\n                                if (properties == undefined || properties == null) return;\r\n                                Object.keys(properties).map(key => {\r\n                                    if (key !== \"Shape\") {\r\n                                        propertyList.push({\r\n                                            name: key,\r\n                                            value: properties[key].value\r\n                                        })\r\n                                    } else {\r\n                                        if (properties[key].MultiSurface) {\r\n                                            let posList = properties[key].MultiSurface.surfaceMember.Polygon.exterior.LinearRing.posList.value.split(\" \");\r\n                                            posList.shift();\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson = {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].Point) {\r\n                                            let posList = properties[key].Point.pos.value.split(\" \");\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"Point\",\r\n                                                    coordinates: posList\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].MultiCurve) {\r\n                                            let posList = properties[key].MultiCurve.curveMember.LineString.posList.value.split(\" \");\r\n\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                resLists.push(propertyList)\r\n                                geometryLists.push(geojson)\r\n                                callback(resLists, geometryLists)\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            } else if (czmObject.xbsjImageryProvider.type == \"WebMapServiceImageryProvider\") {\r\n                let llist = czmObject.xbsjImageryProvider.WebMapServiceImageryProvider.layers.split(\",\")\r\n                for (let i = llist.length - 1; i >= 0; i--) {\r\n                    // console.log('zhelijicine')\r\n                    const item = res.layers[res.layers.length - 1 - llist[i]];\r\n                    // console.log(item.name)\r\n                    let query = `${addr}`\r\n                        + `typename=${typeName}:${item.name}&Filter=`\r\n                        + `<ogc:Filter><ogc:Intersects><ogc:PropertyName>Shape</ogc:PropertyName>`\r\n                        + `<gml:Polygon srsName=\"urn:x-ogc:def:crs:EPSG:4326\"><gml:outerBoundaryIs><gml:LinearRing>`\r\n                        + `<gml:coordinates>${bufferCoordinates}</gml:coordinates>`\r\n                        + `</gml:LinearRing></gml:outerBoundaryIs></gml:Polygon></ogc:Intersects></ogc:Filter>`\r\n                    // console.log(item.name, query)\r\n                    // this.httpReq('get', query).then().catch((err: any) => {\r\n                    this.httpFunc(query, err => {\r\n                        if (resLists.length > 0) return\r\n                        let res = err.error.text\r\n                        let FeatureCollection = this.xml2Json(this.stringToXml(res))['FeatureCollection'];\r\n                        if (FeatureCollection == undefined) return\r\n                        if (FeatureCollection['featureMember']) {\r\n                            if (FeatureCollection['featureMember'].length) {\r\n                                let properties = FeatureCollection['featureMember'][0][item.name]\r\n                                let propertyList = []\r\n                                let geojson = {}\r\n                                if (properties == undefined || properties == null) return;\r\n                                Object.keys(properties).map(key => {\r\n                                    if (key !== \"Shape\") {\r\n                                        propertyList.push({\r\n                                            name: key,\r\n                                            value: properties[key].value\r\n                                        })\r\n                                    } else {\r\n                                        if (properties[key].MultiSurface) {\r\n                                            let posList = properties[key].MultiSurface.surfaceMember.Polygon.exterior.LinearRing.posList.value.split(\" \");\r\n                                            posList.shift();\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson = {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].Point) {\r\n                                            let posList = properties[key].Point.pos.value.split(\" \");\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"Point\",\r\n                                                    coordinates: posList\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].MultiCurve) {\r\n                                            let posList = properties[key].MultiCurve.curveMember.LineString.posList.value.split(\" \");\r\n\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                resLists.push(propertyList)\r\n                                geometryLists.push(geojson)\r\n                                callback(resLists, geometryLists)\r\n                            } else {\r\n                                let properties = FeatureCollection['featureMember'][item.name]\r\n                                let propertyList = []\r\n                                let geojson = {}\r\n\r\n                                if (properties == undefined || properties == null) return;\r\n                                Object.keys(properties).map(key => {\r\n                                    if (key !== \"Shape\") {\r\n                                        propertyList.push({\r\n                                            name: key,\r\n                                            value: properties[key].value\r\n                                        })\r\n                                    } else {\r\n                                        if (properties[key].MultiSurface) {\r\n                                            let posList = properties[key].MultiSurface.surfaceMember.Polygon.exterior.LinearRing.posList.value.split(\" \");\r\n                                            posList.shift();\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson = {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].Point) {\r\n                                            let posList = properties[key].Point.pos.value.split(\" \");\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"Point\",\r\n                                                    coordinates: posList\r\n                                                }\r\n                                            }\r\n                                        } else if (properties[key].MultiCurve) {\r\n                                            let posList = properties[key].MultiCurve.curveMember.LineString.posList.value.split(\" \");\r\n\r\n                                            let list = []\r\n                                            for (let i = 0; i < posList.length; i += 2) {\r\n                                                list.push([posList[i], posList[i + 1]])\r\n                                            }\r\n                                            geojson =\r\n                                            {\r\n                                                type: \"Feature\",\r\n                                                geometry: {\r\n                                                    type: \"LineString\",\r\n                                                    coordinates: list\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                });\r\n                                resLists.push(propertyList)\r\n                                geometryLists.push(geojson)\r\n                                callback(resLists, geometryLists)\r\n                            }\r\n                            // console.log(this.xml2Json(this.stringToXml(res)))\r\n\r\n\r\n                        }\r\n                    })\r\n                    // })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    httpFuncB(requestUrl, callback) {\r\n        this.httpReq('get', requestUrl).then((res: any) => {\r\n            callback(res)\r\n        })\r\n    }\r\n    httpFunc(query, callback) {\r\n        this.httpReq('get', query).then().catch((err: any) => {\r\n            callback(err)\r\n        })\r\n    }\r\n    pickModel(earth, callback) {\r\n        let handler = new Cesium.ScreenSpaceEventHandler(earth.czm.scene.canvas);\r\n        handler.setInputAction((click) => {\r\n            if (!earth.epsplanet.allowClick) {\r\n                return\r\n            }\r\n            // console.log(click)\r\n            let position = earth.czm.viewer.scene.pickPosition(click.position)\r\n            let pickObj = earth.czm.viewer.scene.pick(click.position)\r\n            if (!Cesium.defined(pickObj) || !pickObj.getPropertyNames) {\r\n                earth.sceneTree.$refs.pin1.czmObject.customProp = false;\r\n                return\r\n            }\r\n            // console.log(\"dsadad\", pickObj)\r\n            let cartographic = Cesium.Cartographic.fromCartesian(position)\r\n            // earth.sceneTree.$refs.pin1.czmObject.customProp = false;\r\n            earth.sceneTree.$refs.pin1.czmObject.position = [cartographic.longitude, cartographic.latitude, cartographic.height]\r\n            let PropertyNames = pickObj.getPropertyNames()\r\n            let propertyList = []\r\n            PropertyNames.forEach(property => {\r\n                propertyList.push({\r\n                    name: property,\r\n                    value: pickObj.getProperty(property)\r\n                })\r\n            })\r\n            callback(propertyList, handler)\r\n            // console.log(this.Cartesian2ToCartographic(earth.czm.viewer, position))\r\n        }, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n    }\r\n\r\n    /**\r\n     * 屏幕坐标转经纬度坐标\r\n     * @param viewer \r\n     * @param position 屏幕坐标cartesian2\r\n     * @returns \r\n     */\r\n    Cartesian2ToWGS84(viewer, position) {\r\n        var ray = viewer.camera.getPickRay(position);\r\n        var cartesian = viewer.scene.globe.pick(ray, viewer.scene);\r\n        var cartographic = Cesium.Cartographic.fromCartesian(cartesian);\r\n        let lon = Cesium.Math.toDegrees(cartographic.longitude)\r\n        let lat = Cesium.Math.toDegrees(cartographic.latitude)\r\n        return { lon: lon, lat: lat }\r\n    }\r\n\r\n    Cartesian2ToCartographic(viewer, position) {\r\n        var ray = viewer.camera.getPickRay(position);\r\n        var cartesian = viewer.scene.globe.pick(ray, viewer.scene);\r\n        var cartographic = Cesium.Cartographic.fromCartesian(cartesian);\r\n        return [cartographic.longitude, cartographic.latitude, cartographic.height]\r\n    }\r\n    /**\r\n     * 拼接用于wfs查询的url\r\n     * @param WMTSImageryProvider \r\n     * @returns \r\n     */\r\n    GetWFSUrl(ImageryProvider) {\r\n        let WFSUrl = \"\";\r\n        if (ImageryProvider.type == \"WebMapTileServiceImageryProvider\") {\r\n            let WMTSImageryProvider = ImageryProvider.WebMapTileServiceImageryProvider;\r\n            if (WMTSImageryProvider.url.indexOf('arcgis') !== -1) {\r\n                WFSUrl = WMTSImageryProvider.url.split(\"rest\")[0] + WMTSImageryProvider.url.split(\"rest/\")[1].split(\"MapServer\")[0] + \"MapServer/WFSServer?request=GetFeature&service=WFS&version=1.1.0&\";\r\n            } else if (WMTSImageryProvider.url.indexOf('geoserver') !== -1) {\r\n                WFSUrl = WMTSImageryProvider.url.split(\"gwc\")[0] + WMTSImageryProvider.layer.split(\":\")[0] + \"/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=\" + WMTSImageryProvider.layer + \"&maxFeatures=1&outputFormat=json&filter=\"\r\n            }\r\n        }\r\n        if (ImageryProvider.type == \"WebMapServiceImageryProvider\") {\r\n            let WebMapServiceImageryProvider = ImageryProvider.WebMapServiceImageryProvider;\r\n            if (WebMapServiceImageryProvider.url.indexOf('arcgis') !== -1) {\r\n                WFSUrl = WebMapServiceImageryProvider.url.split(\"MapServer\")[0] + \"MapServer/WFSServer?request=GetFeature&service=WFS&version=1.1.0&\";\r\n            } else if (WebMapServiceImageryProvider.url.indexOf('geoserver') !== -1) {\r\n                WFSUrl = WebMapServiceImageryProvider.url.split(\"wms\")[0] + \"/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=\" + WebMapServiceImageryProvider.layers + \"&maxFeatures=1&outputFormat=json&filter=\";\r\n            }\r\n\r\n        }\r\n        return WFSUrl\r\n    }\r\n    /**\r\n     * \r\n     * @param position [lon,lat]\r\n     * @returns \r\n     */\r\n    Buffer(position, meters) {\r\n        let pointF = turf.point(position);\r\n        let buffered = turf.buffer(pointF, meters, 'meters');\r\n        let coordinates = buffered.geometry.coordinates;\r\n        let points = coordinates[0];\r\n        let degreesListStr = this.pointsToDegreesArray(points);\r\n        return degreesListStr\r\n    }\r\n    /**\r\n     * \r\n     * @param points 格式转换\r\n     * @returns \r\n     */\r\n    pointsToDegreesArray(points) {\r\n        let degreesArray = \"\";\r\n        points.map(item => {\r\n            degreesArray += item[0] + \",\" + item[1] + \" \"\r\n        });\r\n        return degreesArray;\r\n    }\r\n    /**\r\n     * 清除高亮\r\n     */\r\n    ClearHighLight() {\r\n        // debugger\r\n        highLight.entities.removeAll();\r\n    }\r\n    /**\r\n     * xml转json\r\n     * @param xml \r\n     * @returns \r\n     */\r\n    xml2Json(xml) {\r\n        // Create the return object\r\n        var obj = {};\r\n        if (xml.nodeType == 1) { // element\r\n            // do attributes\r\n            if (xml.attributes.length > 0) {\r\n                obj[\"@attributes\"] = {};\r\n                for (var j = 0; j < xml.attributes.length; j++) {\r\n                    // debugger\r\n                    var attribute = xml.attributes.item(j);\r\n                    if (attribute.nodeName.indexOf(\":\") == -1) {\r\n                        obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n                    } else {\r\n                        obj[\"@attributes\"][attribute.nodeName.split(\":\")[1]] = attribute.nodeValue;\r\n                    }\r\n\r\n                }\r\n            }\r\n        } else if (xml.nodeType == 3) { // text\r\n            obj = xml.nodeValue;\r\n        }\r\n        // do children\r\n        if (xml.hasChildNodes()) {\r\n            for (var i = 0; i < xml.childNodes.length; i++) {\r\n                var item = xml.childNodes.item(i);\r\n                var nodeName = item.nodeName;\r\n                if (typeof (obj[nodeName.split(\":\")[1]]) == \"undefined\") {\r\n                    if (nodeName.split(\":\")[1] == undefined) {\r\n                        obj['value'] = this.xml2Json(item);\r\n                    } else {\r\n                        obj[nodeName.split(\":\")[1]] = this.xml2Json(item);\r\n                    }\r\n\r\n                } else {\r\n                    if (typeof (obj[nodeName.split(\":\")[1]].length) == \"undefined\") {\r\n                        var old = obj[nodeName.split(\":\")[1]];\r\n                        obj[nodeName.split(\":\")[1]] = [];\r\n                        obj[nodeName.split(\":\")[1]].push(old);\r\n                    }\r\n                    obj[nodeName.split(\":\")[1]].push(this.xml2Json(item));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    /**\r\n     * 字符串转xml\r\n     * @param xmlString \r\n     * @returns \r\n     */\r\n    stringToXml(xmlString) {\r\n        var xmlDoc;\r\n        if (typeof xmlString == \"string\") {\r\n            //FF\r\n            if (document.implementation.createDocument) {\r\n                var parser = new DOMParser();\r\n                xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\r\n            }\r\n        }\r\n        else {\r\n            xmlDoc = xmlString;\r\n        }\r\n        return xmlDoc;\r\n    }\r\n}","<!-- <nz-switch [(ngModel)]=\"switchValue\" (ngModelChange)=\"switch($event)\"></nz-switch> -->\r\n<div class=\"jimu-widget-onscreen-icon\" title=\"识别\">\r\n    <i nz-icon [nzIconfont]=\"'icon-epsgis-weibiaoti-'\" (click)=\"switch($event)\"></i>\r\n</div>\r\n<!-- <button nz-button (click)=\"test()\">test</button> -->\r\n<!-- <epsgis-planet-layer-manager></epsgis-planet-layer-manager> -->\r\n\r\n<div [hidden]=\"!showInfo\" class=\"dialog\"\r\n    [ngStyle]=\"{ 'left': (winPos[0]-65 ) + 'px', 'bottom': (winPos[3]) + 'px' }\">\r\n    <div class=\"panel\">\r\n        <span>{{title}}</span><i nz-icon nzType=\"close\" nzTheme=\"outline\" (click)=\"close()\" style=\"float: right;\"></i>\r\n        <nz-table #basicTable [nzData]=\"propertyList\" [nzFrontPagination]=\"false\" [nzShowPagination]=\"false\"\r\n            [nzTitle]=\"null\">\r\n            <tbody>\r\n                <tr *ngFor=\"let data of basicTable.data\">\r\n                    <td>{{ data.name }}</td>\r\n                    <td>{{ data.value }}</td>\r\n                </tr>\r\n            </tbody>\r\n        </nz-table>\r\n        <i nz-icon nzType=\"zoom-in\" nzTheme=\"outline\" (click)=\"zoomTo()\"></i><span>缩放至</span>\r\n    </div>\r\n    <div class=\"arrow\"></div>\r\n</div>","import { Component } from \"@angular/core\";\nimport { ComponentRegister } from \"epsgis\";\nimport { BasePlanetWidgetComponent } from '../base-widget/base-widget.component';\nimport { Identify } from '../../utils/identify';\nimport { getPositionsHeightFromTerrain } from '../../utils/getHeight'\n\n@ComponentRegister({\n  uri: \"epsgis-planet-identify\",\n  path: \"epsplanet/components/identify\",\n  name: \"PlanetIdentifyComponent\"\n})\n@Component({\n  selector: \"epsgis-planet-identify\",\n  templateUrl: \"./identify.component.html\",\n  styleUrls: [\"./identify.component.scss\"]\n})\nexport class PlanetIdentifyComponent extends BasePlanetWidgetComponent {\n  winPos: Array<any> = [0, 0, 0, 0];\n  title = \"\"\n  pin1 = null\n  propertyList = [\n    {\n      name: \"1\",\n      value: 2\n    }\n  ];\n  showInfo = false;\n  switchValue = false;\n  czmObjList = []\n  constructor(private identify: Identify) {\n    super();\n  }\n  createInfoWin() {\n    let win = document.createElement('div');\n    win.className = \"dialog\";\n    win.style.left = this.winPos[0] - 80 + \"px\";\n    win.style.bottom = this.winPos[3] - 320 + \"px\";\n    win.innerHTML = `<div class=\"panel\">\n    <span>${this.title}</span><i nz-icon nzType=\"close\" nzTheme=\"outline\" (click)=\"close()\" style=\"float: right;\"></i>\n    <nz-table #basicTable [nzData]=\"propertyList\" [nzFrontPagination]=\"false\" [nzShowPagination]=\"false\"\n        [nzTitle]=\"null\">\n        <tbody>\n            <tr *ngFor=\"let data of basicTable.data\">\n                <td>{{ data.name }}</td>\n                <td>{{ data.value }}</td>\n            </tr>\n        </tbody>\n    </nz-table>\n    <i nz-icon nzType=\"zoom-in\" nzTheme=\"outline\" (click)=\"zoomTo()\"></i><span>缩放至</span>\n</div>\n<div class=\"arrow\"></div>`;\n    document.getElementsByClassName(\"cesium-viewer\")[0].append(win);\n    return win\n  }\n  //初始化影像点选识别功能\n  Init() {\n    let win = document.getElementsByClassName(\"dialog\")[0];\n    win.parentNode.removeChild(win);\n    document.getElementsByClassName(\"cesium-viewer\")[0].append(win);\n    window['showInfo'] = this.showInfo;\n    this.view.sceneTree.$refs.pin.children.push({\n      \"ref\": 'pin1',\n      \"czmObject\": {\n        \"name\": 'Pin1',\n        \"xbsjType\": \"Pin\",\n        \"position\": [1, 1, 0],\n        \"near\": 30,\n        \"show\": false,\n        \"customProp\": this.showInfo\n      }\n    })\n    this.pin1 = this.view.sceneTree.$refs.pin1.czmObject;\n    XE.MVVM.watch(() => this.pin1.winPos, () => {\n      // debugger\n      this.winPos = this.pin1.winPos\n      console.log(\"win\", this.winPos)\n      // win[\"style\"].left = this.winPos[0] - 80 + \"px\";\n      // win[\"style\"].bottom = this.winPos[3] - 320 + \"px\";\n    });\n    XE.MVVM.watch(() => this.pin1.customProp, () => {\n      if (!this.pin1.customProp) {\n        this.showInfo = false\n      }\n    });\n\n    if (this.view == null) return;\n    this.bindIndentify(this.view.sceneTree.$refs.layerlist)\n    this.identify.test(this.czmObjList, this.view, res => {\n      console.log(\"res:\", res)\n      this.pin1.customProp = true\n      this.showInfo = true\n      this.propertyList = res\n    })\n    this.identify.pickModel(this.view, (res, handler) => {\n      this.pin1.customProp = true\n      this.showInfo = true\n      this.propertyList = res\n      // handler.destroy()\n    })\n  }\n  bindIndentify(list) {\n    if (list.children && list.children.length > 0) {\n      list.children.forEach(item => {\n        if (item.children && item.children.length > 0) {\n          this.bindIndentify(item)\n        } else {\n          this.bindClick(item)\n        }\n      });\n    } else {\n      this.bindClick(list)\n    }\n  }\n  bindClick(item) {\n    // if (item.czmObject.xbsjType !== \"Imagery\") return;\n    if (item.czmObject.xbsjType == \"Imagery\") {\n      if (item.czmObject.xbsjImageryProvider.type == \"WebMapTileServiceImageryProvider\" || item.czmObject.xbsjImageryProvider.type == \"WebMapServiceImageryProvider\") {\n        if (item.czmObject.xbsjImageryProvider[item.czmObject.xbsjImageryProvider.type].url.indexOf(\"arcgis\") !== -1) {\n          this.czmObjList.push(item.czmObject)\n\n          // this.identify.getLayers(item.czmObject, this.view, res => {\n          //   console.log(\"res:\", res)\n          //   this.pin1.customProp = true\n          //   this.showInfo = true\n          //   this.propertyList = res\n          // })\n        } else {\n          // this.czmObjList.push(item)\n          this.identify.GetFeatureInfo(item.czmObject, this.view, 'point', res => {\n            // console.log(item.czmObject.xbsjImageryProvider[item.czmObject.xbsjImageryProvider.type])\n            this.title = item.czmObject.xbsjImageryProvider[item.czmObject.xbsjImageryProvider.type].layer\n            this.pin1.customProp = true\n            this.showInfo = true\n            this.propertyList = res\n          });\n        }\n      }\n    } else if (item.czmObject.xbsjType == \"Tileset\") {\n\n    }\n\n  }\n  close() {\n    // console.log(\"close\")\n    this.showInfo = false;\n  }\n  zoomTo() {\n    let entityCollection = this.view.czm.viewer.dataSources.getByName(\"highLight\")[0].entities\n    \n    // let entity = entityCollection.values[0]\n    // let positions = entity.polyline.positions._value;\n    // console.log(entity.polyline.positions._value)\n    // getPositionsHeightFromTerrain(this.view,positions,res=>{\n    //   console.log(\"getPosheight:\",positions)\n    // })\n  //   let polyCenter = Cesium.BoundingSphere.fromPoints(entity.polyline.positions._value).center\n    let viewer = this.view.czm.viewer;\n  //   let cartographic = Cesium.Cartographic.fromCartesian(polyCenter, viewer.scene.globe.ellipsoid, new Cesium.Cartographic());\n  //   let lat = Cesium.Math.toDegrees(cartographic.latitude);\n  //   let lng = Cesium.Math.toDegrees(cartographic.longitude);\n  //   let height = cartographic.height;\n  //   viewer.camera.flyTo({\n  //     destination : Cesium.Cartesian3.fromDegrees(lng, lat,1000),\n  //     orientation : {\n  //         //heading : Cesium.Math.toRadians(0.0),\n  //        // pitch : Cesium.Math.toRadians(-25.0),\n  //         //roll : 0.0\n  //     }\n  // });\n  viewer.flyTo(entityCollection)\n  }\n  switch(e) {\n    let earth = this.view\n    console.log(this.czmObjList)\n    if (e.srcElement.style.color == 'aqua') {\n      e.srcElement.style.color = \"\"\n    } else {\n      e.srcElement.style.color = 'aqua'\n    }\n\n\n    earth.epsplanet.allowClick = !earth.epsplanet.allowClick;\n    if (!earth.epsplanet.allowClick) {\n      this.view.interaction.picking.enabled = false\n      this.view.interaction.picking.hoverEnable = false\n      this.identify.ClearHighLight();\n    } else {\n      this.view.interaction.picking.enabled = true\n      this.view.interaction.picking.hoverEnable = true\n    }\n\n  }\n  test() {\n    this.identify.getLayers(this.view.sceneTree.$refs.layerlist.children[1].children[0].czmObject, this.view, res => {\n      console.log(res)\n      this.pin1.customProp = true\n      this.showInfo = true\n      this.propertyList = res\n    })\n\n\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.Init();\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EpsGisDirectivesModule } from 'epsgis';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\nimport { NzTreeViewModule } from 'ng-zorro-antd/tree-view';\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\nimport { NzModalModule } from 'ng-zorro-antd/modal';\nimport { NzTableModule } from 'ng-zorro-antd/table';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { PlanetEarthComponent } from './components/earth/earth.component';\nimport { PlanetHomeComponent } from './components/home/home.component';\nimport { PlanetLayerListComponent } from './components/layer-list/layer-list.component';\nimport { PlanetLayerManagerComponent } from './components/layer-manager/layer-manager.component';\nimport { PlanetLocationComponent } from './components/location/location.component';\nimport { PlanetModeSwitchComponent } from './components/mode-switch/mode-switch.component';\nimport { PlanetStatusBarComponent } from './components/status-bar/status-bar.component';\nimport { PlanetZoomComponent } from './components/zoom/zoom.component';\nimport { PlanetBasemapGalleryComponent } from './components/basemap-gallery/basemap-gallery.component';\nimport { PlanetIdentifyComponent } from './components/identify/identify.component';\nconst components = [\n  PlanetEarthComponent,\n  PlanetLayerListComponent,\n  PlanetLayerManagerComponent,\n  PlanetStatusBarComponent,\n  PlanetHomeComponent,\n  PlanetLocationComponent,\n  PlanetModeSwitchComponent,\n  PlanetZoomComponent,\n  PlanetBasemapGalleryComponent,\n  PlanetIdentifyComponent\n];\n@NgModule({\n  declarations: components,\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NzInputModule,\n    NzInputNumberModule,\n    NzIconModule,\n    NzTreeModule,\n    NzTreeViewModule,\n    NzPopoverModule,\n    NzDividerModule,\n    NzSelectModule,\n    NzButtonModule,\n    NzMenuModule,\n    NzDropDownModule,\n    NzSliderModule,\n    NzGridModule,\n    NzTabsModule,\n    NzModalModule,\n    NzTableModule,\n    NzSwitchModule,\n    NzToolTipModule,\n    NzFormModule,\n    EpsGisDirectivesModule\n  ],\n  exports:components,\n  entryComponents: [...components]\n})\nexport class EpsGisForPlanetModule { }\n\n","function getPositionsHeightFromTileset(earth, positions, resultCallback) {\r\n    if (!earth.czm.scene.globe.depthTestAgainstTerrain) {\r\n        console.warn(\r\n            \"scene.globe.depthTestAgainstTerrain is false, may not get the height!\"\r\n        );\r\n    }\r\n\r\n    const cps = [];\r\n    for (let p of positions) {\r\n        cps.push(new Cesium.Cartographic(p[0], p[1], p[2]));\r\n    }\r\n\r\n    earth.czm.scene\r\n        .sampleHeightMostDetailed(cps)\r\n        .then(r => {\r\n            try {\r\n                let i = 0;\r\n                for (let p of positions) {\r\n                    if (r[i].height === undefined) {\r\n                        throw new Error(\"r[i].height === undefined\");\r\n                    }\r\n                    p[2] = r[i].height;\r\n                    i++;\r\n                }\r\n                // console.log(p);\r\n                resultCallback(true);\r\n            } catch (error) {\r\n                console.error(\"sampleHeightMostDetailed error 1!\");\r\n                resultCallback(false);\r\n            }\r\n        })\r\n        .otherwise(error => {\r\n            resultCallback(false);\r\n            console.error(\"sampleHeightMostDetailed error 2!\");\r\n        });\r\n}\r\n\r\nfunction getPositionsHeightFromTerrain(earth, positions, resultCallback) {\r\n    // Query the terrain height of two Cartographic positions\r\n    var terrainProvider = earth.czm.scene.terrainProvider;\r\n\r\n    if (terrainProvider instanceof Cesium.EllipsoidTerrainProvider) {\r\n        console.warn(\"没加载地形，可能获取不到高程信息\");\r\n    }\r\n\r\n    const cps = [];\r\n    for (let p of positions) {\r\n        cps.push(new Cesium.Cartographic.fromCartesian(p));\r\n    }\r\n\r\n    var promise = Cesium.sampleTerrainMostDetailed(terrainProvider, cps);\r\n    Cesium.when(\r\n        promise,\r\n        function (r) {\r\n            try {\r\n                let i = 0;\r\n                for (let p of positions) {\r\n                    if (r[i].height === undefined) {\r\n                        throw new Error(\"r[i].height === undefined\");\r\n                    }\r\n                    // p[\"x\"]=r[i].longitude;\r\n                    // p[\"y\"]=r[i].latitude;\r\n                    // p[\"z\"] = r[i].height;\r\n                    p = new Cesium.Cartesian3.fromRadians(r[i].longitude, r[i].latitude, r[i].height)\r\n                    i++;\r\n                }\r\n                resultCallback(positions);\r\n            } catch (error) {\r\n                console.error(\"sampleTerrainMostDetailed error 1!\");\r\n                resultCallback(false);\r\n            }\r\n        },\r\n        function (error) {\r\n            resultCallback(false);\r\n            console.error(\"sampleTerrainMostDetailed error 2!\" + error);\r\n        }\r\n    );\r\n}\r\n\r\nexport { getPositionsHeightFromTerrain, getPositionsHeightFromTileset }\r\n"],"names":["i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵnamespaceSVG","i0.ɵɵelementContainerEnd","i0.ɵɵnamespaceHTML","i0.ɵɵtextInterpolate3"],"mappings":"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"}