import { OnInit, ElementRef } from '@angular/core';
import { EventEmitter } from "@angular/core";
import { DomSanitizer, SafeResourceUrl } from "@angular/platform-browser";
import * as i0 from "@angular/core";
export declare class VideoViewerComponent implements OnInit {
    domSanitizer: DomSanitizer;
    videoToolbar: ElementRef;
    width: number;
    videoWidth: number;
    height: number;
    source: string[];
    poster: string;
    ready: EventEmitter<any>;
    videoElem: HTMLVideoElement;
    sub: number;
    videoUrl: SafeResourceUrl;
    currentTime: string;
    totalTime: string;
    play_progress: number;
    videoToolbarProgressHeight: number;
    preVolume: number;
    showProgressBall: boolean;
    progressBallDragStartClientX: number;
    isProgressBallStartMove: boolean;
    volumeBallDragStartClientX: number;
    isVolumeBallStartMove: boolean;
    timeTip: string;
    timeTipOffsetX: number;
    constructor(domSanitizer: DomSanitizer);
    ngOnInit(): void;
    onLoadedmetadata(e: any): void;
    OnPlayEnded(e: any): void;
    onPlay(e: any): void;
    onTimeupdate(e: any): void;
    onProgress(e: any): void;
    onCanplaythrough(e: any): void;
    videoToolbarProgressClick(e: MouseEvent): void;
    videoToolbarProgressMove(e: MouseEvent): void;
    progressBallDragStart(e: MouseEvent): void;
    progressBallDrag(e: MouseEvent): void;
    progressBallDragEnd(e: MouseEvent): void;
    volumeValClick(e: MouseEvent, width: number): void;
    volumeBallDragStart(e: MouseEvent): void;
    volumeBallDrag(e: MouseEvent, width: number): void;
    volumeBallDragEnd(e: MouseEvent): void;
    videoMouseover(e: any): void;
    videoMouseout(e: any): void;
    play(): void;
    pause(): void;
    playOrPause(): void;
    selectVideo(path: any, i: any): void;
    isMuted(): void;
    getFormatTime(value: number): string;
    static ɵfac: i0.ɵɵFactoryDef<VideoViewerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<VideoViewerComponent, "video-viewer", never, { "width": "width"; "videoWidth": "videoWidth"; "height": "height"; "source": "source"; "poster": "poster"; }, { "ready": "ready"; }, never, never>;
}
//# sourceMappingURL=video-viewer.component.d.ts.map