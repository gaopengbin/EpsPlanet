import { ElementRef, EventEmitter, NgZone, OnInit } from '@angular/core';
import { JSONEditorMode, JSONEditorOptions } from "jsoneditor";
import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class JsonEditorComponent implements OnInit, ControlValueAccessor {
    readonly jsonRess: string[];
    private _value;
    private editor;
    jsonEditorContianer: ElementRef;
    private _data;
    get data(): any;
    set data(val: any);
    dataChange: EventEmitter<any>;
    editorOptions: JSONEditorOptions;
    treeMaxHeight: number;
    onChange: EventEmitter<any>;
    onError: EventEmitter<Error>;
    private zone;
    constructor(zone: NgZone);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private initEditor;
    get value(): any;
    set value(v: any);
    _onChange(_: any): void;
    _onTouched(): void;
    disabled: boolean;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    updateValue(value: any): void;
    writeValue(value: any): void;
    getEditor(): any;
    expandAll(): void;
    collapseAll(): void;
    destroy(): void;
    focus(): void;
    setMode(mode: JSONEditorMode): void;
    setModes(modes: JSONEditorMode[]): void;
    setName(name: string | undefined): void;
    setSchema(schema: Object): void;
    setText(jsonString: string): void;
    getMode(): JSONEditorMode;
    getName(): string;
    getText(): string;
    static ɵfac: i0.ɵɵFactoryDef<JsonEditorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<JsonEditorComponent, "epsgis-json-editor", never, { "data": "data"; "editorOptions": "options"; "treeMaxHeight": "treeMaxHeight"; }, { "dataChange": "dataChange"; "onChange": "onChange"; "onError": "onError"; }, never, never>;
}
//# sourceMappingURL=json-editor.component.d.ts.map