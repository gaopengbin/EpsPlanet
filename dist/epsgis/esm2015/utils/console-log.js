export class LogService {
    static overwriteLog(log) {
        const CONSOLE_METHODS = ['debug', 'error', 'info', "log", 'warn', 'time', 'timeEnd', 'count'];
        CONSOLE_METHODS.forEach((item) => {
            window.console[item] = (function (oriLogFunc) {
                return function () {
                    if (log) {
                        try {
                            oriLogFunc.call(console, ...arguments);
                        }
                        catch (e) {
                            console.error('console.log error', e);
                        }
                    }
                };
            })(window.console[item]);
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc29sZS1sb2cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9lcHNnaXMvdXRpbHMvY29uc29sZS1sb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxPQUFPLFVBQVU7SUFJbkIsTUFBTSxDQUFDLFlBQVksQ0FBQyxHQUFZO1FBQzVCLE1BQU0sZUFBZSxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQzlGLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUM3QixNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxVQUFVO2dCQUN4QyxPQUFPO29CQUNILElBQUksR0FBRyxFQUFFO3dCQUNMLElBQUk7NEJBQ0EsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxTQUFTLENBQUMsQ0FBQzt5QkFJMUM7d0JBQUMsT0FBTyxDQUFDLEVBQUU7NEJBQ1IsT0FBTyxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLENBQUMsQ0FBQzt5QkFDekM7cUJBQ0o7Z0JBQ0wsQ0FBQyxDQUFBO1lBQ0wsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiDph43lhpnml6Xlv5flh73mlbBcbiAqL1xuZXhwb3J0IGNsYXNzIExvZ1NlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIOS+nei1luWFqOWxgOmFjee9ru+8jOi/mOaYr+aUueS4uumdmeaAgeWQp1xuICAgICAqL1xuICAgIHN0YXRpYyBvdmVyd3JpdGVMb2cobG9nOiBib29sZWFuKSB7XG4gICAgICAgIGNvbnN0IENPTlNPTEVfTUVUSE9EUyA9IFsnZGVidWcnLCAnZXJyb3InLCAnaW5mbycsIFwibG9nXCIsICd3YXJuJywgJ3RpbWUnLCAndGltZUVuZCcsICdjb3VudCddO1xuICAgICAgICBDT05TT0xFX01FVEhPRFMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgd2luZG93LmNvbnNvbGVbaXRlbV0gPSAoZnVuY3Rpb24gKG9yaUxvZ0Z1bmMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobG9nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yaUxvZ0Z1bmMuY2FsbChjb25zb2xlLCAuLi5hcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIChpdGVtID09PSBcImVycm9yXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS50cmFjZSguLi5hcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdjb25zb2xlLmxvZyBlcnJvcicsIGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkod2luZG93LmNvbnNvbGVbaXRlbV0pO1xuICAgICAgICB9KTtcbiAgICB9XG59Il19